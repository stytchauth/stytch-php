<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models;

class ConnectedApp
{
    public string $client_id;
    public string $client_name;
    public string $client_description;
    public string $status;
    public bool $full_access_allowed;
    public string $client_type;
    public array $redirect_urls;
    public int $access_token_expiry_minutes;
    public string $access_token_template_content;
    public array $post_logout_redirect_urls;
    public bool $bypass_consent_for_offline_access;
    public ?string $client_secret_last_four;
    public ?string $next_client_secret_last_four;
    public ?string $access_token_custom_audience;
    public ?string $logo_url;

    public function __construct(
        string $client_id,
        string $client_name,
        string $client_description,
        string $status,
        bool $full_access_allowed,
        string $client_type,
        array $redirect_urls,
        int $access_token_expiry_minutes,
        string $access_token_template_content,
        array $post_logout_redirect_urls,
        bool $bypass_consent_for_offline_access,
        ?string $client_secret_last_four,
        ?string $next_client_secret_last_four,
        ?string $access_token_custom_audience,
        ?string $logo_url
    ) {
        $this->client_id = $client_id;
        $this->client_name = $client_name;
        $this->client_description = $client_description;
        $this->status = $status;
        $this->full_access_allowed = $full_access_allowed;
        $this->client_type = $client_type;
        $this->redirect_urls = $redirect_urls;
        $this->access_token_expiry_minutes = $access_token_expiry_minutes;
        $this->access_token_template_content = $access_token_template_content;
        $this->post_logout_redirect_urls = $post_logout_redirect_urls;
        $this->bypass_consent_for_offline_access = $bypass_consent_for_offline_access;
        $this->client_secret_last_four = $client_secret_last_four;
        $this->next_client_secret_last_four = $next_client_secret_last_four;
        $this->access_token_custom_audience = $access_token_custom_audience;
        $this->logo_url = $logo_url;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['client_id'],
            $data['client_name'],
            $data['client_description'],
            $data['status'],
            $data['full_access_allowed'],
            $data['client_type'],
            $data['redirect_urls'],
            $data['access_token_expiry_minutes'],
            $data['access_token_template_content'],
            $data['post_logout_redirect_urls'],
            $data['bypass_consent_for_offline_access'],
            $data['client_secret_last_four'] ?? null,
            $data['next_client_secret_last_four'] ?? null,
            $data['access_token_custom_audience'] ?? null,
            $data['logo_url'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'client_id' => $this->client_id,
            'client_name' => $this->client_name,
            'client_description' => $this->client_description,
            'status' => $this->status,
            'full_access_allowed' => $this->full_access_allowed,
            'client_type' => $this->client_type,
            'redirect_urls' => $this->redirect_urls,
            'access_token_expiry_minutes' => $this->access_token_expiry_minutes,
            'access_token_template_content' => $this->access_token_template_content,
            'post_logout_redirect_urls' => $this->post_logout_redirect_urls,
            'bypass_consent_for_offline_access' => $this->bypass_consent_for_offline_access,
            'client_secret_last_four' => $this->client_secret_last_four,
            'next_client_secret_last_four' => $this->next_client_secret_last_four,
            'access_token_custom_audience' => $this->access_token_custom_audience,
            'logo_url' => $this->logo_url,
        ];
    }
}

class ConnectedAppWithClientSecret
{
    public string $client_id;
    public string $client_name;
    public string $client_description;
    public string $status;
    public bool $full_access_allowed;
    public string $client_type;
    public array $redirect_urls;
    public int $access_token_expiry_minutes;
    public string $access_token_template_content;
    public array $post_logout_redirect_urls;
    public bool $bypass_consent_for_offline_access;
    public ?string $client_secret_last_four;
    public ?string $next_client_secret_last_four;
    public ?string $client_secret;
    public ?string $access_token_custom_audience;
    public ?string $logo_url;

    public function __construct(
        string $client_id,
        string $client_name,
        string $client_description,
        string $status,
        bool $full_access_allowed,
        string $client_type,
        array $redirect_urls,
        int $access_token_expiry_minutes,
        string $access_token_template_content,
        array $post_logout_redirect_urls,
        bool $bypass_consent_for_offline_access,
        ?string $client_secret_last_four,
        ?string $next_client_secret_last_four,
        ?string $client_secret,
        ?string $access_token_custom_audience,
        ?string $logo_url
    ) {
        $this->client_id = $client_id;
        $this->client_name = $client_name;
        $this->client_description = $client_description;
        $this->status = $status;
        $this->full_access_allowed = $full_access_allowed;
        $this->client_type = $client_type;
        $this->redirect_urls = $redirect_urls;
        $this->access_token_expiry_minutes = $access_token_expiry_minutes;
        $this->access_token_template_content = $access_token_template_content;
        $this->post_logout_redirect_urls = $post_logout_redirect_urls;
        $this->bypass_consent_for_offline_access = $bypass_consent_for_offline_access;
        $this->client_secret_last_four = $client_secret_last_four;
        $this->next_client_secret_last_four = $next_client_secret_last_four;
        $this->client_secret = $client_secret;
        $this->access_token_custom_audience = $access_token_custom_audience;
        $this->logo_url = $logo_url;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['client_id'],
            $data['client_name'],
            $data['client_description'],
            $data['status'],
            $data['full_access_allowed'],
            $data['client_type'],
            $data['redirect_urls'],
            $data['access_token_expiry_minutes'],
            $data['access_token_template_content'],
            $data['post_logout_redirect_urls'],
            $data['bypass_consent_for_offline_access'],
            $data['client_secret_last_four'] ?? null,
            $data['next_client_secret_last_four'] ?? null,
            $data['client_secret'] ?? null,
            $data['access_token_custom_audience'] ?? null,
            $data['logo_url'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'client_id' => $this->client_id,
            'client_name' => $this->client_name,
            'client_description' => $this->client_description,
            'status' => $this->status,
            'full_access_allowed' => $this->full_access_allowed,
            'client_type' => $this->client_type,
            'redirect_urls' => $this->redirect_urls,
            'access_token_expiry_minutes' => $this->access_token_expiry_minutes,
            'access_token_template_content' => $this->access_token_template_content,
            'post_logout_redirect_urls' => $this->post_logout_redirect_urls,
            'bypass_consent_for_offline_access' => $this->bypass_consent_for_offline_access,
            'client_secret_last_four' => $this->client_secret_last_four,
            'next_client_secret_last_four' => $this->next_client_secret_last_four,
            'client_secret' => $this->client_secret,
            'access_token_custom_audience' => $this->access_token_custom_audience,
            'logo_url' => $this->logo_url,
        ];
    }
}

class ConnectedAppWithNextClientSecret
{
    public string $client_id;
    public string $client_name;
    public string $client_description;
    public string $status;
    public string $client_secret_last_four;
    public bool $full_access_allowed;
    public string $client_type;
    public array $redirect_urls;
    public string $next_client_secret;
    public int $access_token_expiry_minutes;
    public string $access_token_template_content;
    public array $post_logout_redirect_urls;
    public bool $bypass_consent_for_offline_access;
    public ?string $next_client_secret_last_four;
    public ?string $access_token_custom_audience;
    public ?string $logo_url;

    public function __construct(
        string $client_id,
        string $client_name,
        string $client_description,
        string $status,
        string $client_secret_last_four,
        bool $full_access_allowed,
        string $client_type,
        array $redirect_urls,
        string $next_client_secret,
        int $access_token_expiry_minutes,
        string $access_token_template_content,
        array $post_logout_redirect_urls,
        bool $bypass_consent_for_offline_access,
        ?string $next_client_secret_last_four,
        ?string $access_token_custom_audience,
        ?string $logo_url
    ) {
        $this->client_id = $client_id;
        $this->client_name = $client_name;
        $this->client_description = $client_description;
        $this->status = $status;
        $this->client_secret_last_four = $client_secret_last_four;
        $this->full_access_allowed = $full_access_allowed;
        $this->client_type = $client_type;
        $this->redirect_urls = $redirect_urls;
        $this->next_client_secret = $next_client_secret;
        $this->access_token_expiry_minutes = $access_token_expiry_minutes;
        $this->access_token_template_content = $access_token_template_content;
        $this->post_logout_redirect_urls = $post_logout_redirect_urls;
        $this->bypass_consent_for_offline_access = $bypass_consent_for_offline_access;
        $this->next_client_secret_last_four = $next_client_secret_last_four;
        $this->access_token_custom_audience = $access_token_custom_audience;
        $this->logo_url = $logo_url;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['client_id'],
            $data['client_name'],
            $data['client_description'],
            $data['status'],
            $data['client_secret_last_four'],
            $data['full_access_allowed'],
            $data['client_type'],
            $data['redirect_urls'],
            $data['next_client_secret'],
            $data['access_token_expiry_minutes'],
            $data['access_token_template_content'],
            $data['post_logout_redirect_urls'],
            $data['bypass_consent_for_offline_access'],
            $data['next_client_secret_last_four'] ?? null,
            $data['access_token_custom_audience'] ?? null,
            $data['logo_url'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'client_id' => $this->client_id,
            'client_name' => $this->client_name,
            'client_description' => $this->client_description,
            'status' => $this->status,
            'client_secret_last_four' => $this->client_secret_last_four,
            'full_access_allowed' => $this->full_access_allowed,
            'client_type' => $this->client_type,
            'redirect_urls' => $this->redirect_urls,
            'next_client_secret' => $this->next_client_secret,
            'access_token_expiry_minutes' => $this->access_token_expiry_minutes,
            'access_token_template_content' => $this->access_token_template_content,
            'post_logout_redirect_urls' => $this->post_logout_redirect_urls,
            'bypass_consent_for_offline_access' => $this->bypass_consent_for_offline_access,
            'next_client_secret_last_four' => $this->next_client_secret_last_four,
            'access_token_custom_audience' => $this->access_token_custom_audience,
            'logo_url' => $this->logo_url,
        ];
    }
}

class ResultsMetadata
{
    public int $total;
    public ?string $next_cursor;

    public function __construct(
        int $total,
        ?string $next_cursor
    ) {
        $this->total = $total;
        $this->next_cursor = $next_cursor;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['total'],
            $data['next_cursor'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'total' => $this->total,
            'next_cursor' => $this->next_cursor,
        ];
    }
}

