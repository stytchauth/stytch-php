<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models\Discovery\Organizations;

class ListRequest
{
    /**
    * The Intermediate Session Token. This token does not necessarily belong to a specific instance of a
    * Member, but represents a bag of factors that may be converted to a member session. The token can be used
    * with the [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms),
    * [TOTP Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-totp), or
    * [Recovery Codes Recover endpoint](https://stytch.com/docs/b2b/api/recovery-codes-recover) to complete an
    * MFA flow and log in to the Organization. The token has a default expiry of 10 minutes. It can also be
    * used with the
    * [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)
    * to join a specific Organization that allows the factors represented by the intermediate session token;
    * or the
    * [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to create a new Organization and Member. Intermediate Session Tokens have a default expiry of 10 minutes.
     */
    public ?string $intermediateSessionToken = null;
    /** A secret token for a given Stytch Session. */
    public ?string $sessionToken = null;
    /** The JSON Web Token (JWT) for a given Stytch Session. */
    public ?string $sessionJwt = null;

    public function __construct(
        ?string $intermediateSessionToken = null,
        ?string $sessionToken = null,
        ?string $sessionJwt = null
    ) {
        $this->intermediateSessionToken = $intermediateSessionToken;
        $this->sessionToken = $sessionToken;
        $this->sessionJwt = $sessionJwt;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['intermediate_session_token'] ?? null,
            $data['session_token'] ?? null,
            $data['session_jwt'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'intermediate_session_token' => $this->intermediateSessionToken,
            'session_token' => $this->sessionToken,
            'session_jwt' => $this->sessionJwt,
        ];
    }
}
