<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models\SSO\External;

class UpdateConnectionRequest
{
    /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value. You may also use the
    * organization_slug or organization_external_id here as a convenience.
     */
    public string $organizationId;
    /** Globally unique UUID that identifies a specific External SSO Connection. */
    public string $connectionId;
    /** A human-readable display name for the connection. */
    public ?string $displayName = null;
    /**
    * All Members who log in with this External connection will implicitly receive the specified Roles. See
    * the [RBAC guide](https://stytch.com/docs/b2b/guides/rbac/role-assignment) for more information about
    * role assignment. Implicit role assignments are not supported for External connections if the underlying
    * SSO connection is an OIDC connection.
     */
    public ?array $externalConnectionImplicitRoleAssignments = null;
    /**
    * Defines the names of the groups
    *  that grant specific role assignments. For each group-Role pair, if a Member logs in with this external
    * connection and
    *  belongs to the specified group, they will be granted the associated Role. See the
    *  [RBAC guide](https://stytch.com/docs/b2b/guides/rbac/role-assignment) for more information about role
    * assignment. Before adding any group implicit role assignments to an external connection, you must add a
    * "groups" key to the underlying SAML connection's
    *          `attribute_mapping`. Make sure that the SAML connection IdP is configured to correctly send the
    * group information. Implicit role assignments are not supported
    *          for External connections if the underlying SSO connection is an OIDC connection.
     */
    public ?array $externalGroupImplicitRoleAssignments = null;

    public function __construct(
        string $organizationId,
        string $connectionId,
        ?string $displayName = null,
        ?array $externalConnectionImplicitRoleAssignments = null,
        ?array $externalGroupImplicitRoleAssignments = null
    ) {
        $this->organizationId = $organizationId;
        $this->connectionId = $connectionId;
        $this->displayName = $displayName;
        $this->externalConnectionImplicitRoleAssignments = $externalConnectionImplicitRoleAssignments;
        $this->externalGroupImplicitRoleAssignments = $externalGroupImplicitRoleAssignments;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization_id'],
            $data['connection_id'],
            $data['display_name'] ?? null,
            isset($data['external_connection_implicit_role_assignments']) && $data['external_connection_implicit_role_assignments'] !== null ? array_map(fn ($item) => \Stytch\B2B\Models\SSO\ConnectionImplicitRoleAssignment::fromArray($item), $data['external_connection_implicit_role_assignments']) : null,
            isset($data['external_group_implicit_role_assignments']) && $data['external_group_implicit_role_assignments'] !== null ? array_map(fn ($item) => \Stytch\B2B\Models\SSO\GroupImplicitRoleAssignment::fromArray($item), $data['external_group_implicit_role_assignments']) : null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization_id' => $this->organizationId,
            'connection_id' => $this->connectionId,
            'display_name' => $this->displayName,
            'external_connection_implicit_role_assignments' => $this->externalConnectionImplicitRoleAssignments,
            'external_group_implicit_role_assignments' => $this->externalGroupImplicitRoleAssignments,
        ];
    }
}
