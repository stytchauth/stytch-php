<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models\SSO\External;


final class CreateConnectionRequest
{
    /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value. You may also use the
    * organization_slug or organization_external_id here as a convenience.
     */
    public string $organizationId;
    /** Globally unique UUID that identifies a different Organization within your Project. */
    public string $externalOrganizationId;
    /**
    * Globally unique UUID that identifies a specific SSO connection configured for a different Organization
    * in your Project.
     */
    public string $externalConnectionId;
    /** A human-readable display name for the connection. */
    public ?string $displayName = null;
    public ?array $connectionImplicitRoleAssignments = null;
    public ?array $groupImplicitRoleAssignments = null;

    public function __construct(
        string $organizationId,
        string $externalOrganizationId,
        string $externalConnectionId,
        ?string $displayName = null,
        ?array $connectionImplicitRoleAssignments = null,
        ?array $groupImplicitRoleAssignments = null
    ) {
        $this->organizationId = $organizationId;
        $this->externalOrganizationId = $externalOrganizationId;
        $this->externalConnectionId = $externalConnectionId;
        $this->displayName = $displayName;
        $this->connectionImplicitRoleAssignments = $connectionImplicitRoleAssignments;
        $this->groupImplicitRoleAssignments = $groupImplicitRoleAssignments;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization_id'],
            $data['external_organization_id'],
            $data['external_connection_id'],
            $data['display_name'] ?? null,
            isset($data['connection_implicit_role_assignments']) && $data['connection_implicit_role_assignments'] !== null ? array_map(fn($item) => \Stytch\B2B\Models\SSO\SAMLConnectionImplicitRoleAssignment::fromArray($item), $data['connection_implicit_role_assignments']) : null,
            isset($data['group_implicit_role_assignments']) && $data['group_implicit_role_assignments'] !== null ? array_map(fn($item) => \Stytch\B2B\Models\SSO\SAMLGroupImplicitRoleAssignment::fromArray($item), $data['group_implicit_role_assignments']) : null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization_id' => $this->organizationId,
            'external_organization_id' => $this->externalOrganizationId,
            'external_connection_id' => $this->externalConnectionId,
            'display_name' => $this->displayName,
            'connection_implicit_role_assignments' => $this->connectionImplicitRoleAssignments,
            'group_implicit_role_assignments' => $this->groupImplicitRoleAssignments,
        ];
    }
}