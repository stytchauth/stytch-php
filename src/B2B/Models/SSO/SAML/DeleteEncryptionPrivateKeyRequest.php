<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models\SSO\SAML;


final class DeleteEncryptionPrivateKeyRequest
{
    /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value. You may also use the
    * organization_slug or organization_external_id here as a convenience.
     */
    public string $organizationId;
    /** Globally unique UUID that identifies a specific SSO `connection_id` for a Member. */
    public string $connectionId;
    /** The ID of the encryption private key to be deleted. */
    public string $privateKeyId;

    public function __construct(
        string $organizationId,
        string $connectionId,
        string $privateKeyId
    ) {
        $this->organizationId = $organizationId;
        $this->connectionId = $connectionId;
        $this->privateKeyId = $privateKeyId;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization_id'],
            $data['connection_id'],
            $data['private_key_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization_id' => $this->organizationId,
            'connection_id' => $this->connectionId,
            'private_key_id' => $this->privateKeyId,
        ];
    }
}