<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models;

enum InviteRequestLocale: string
{
}

enum LoginOrSignupRequestLocale: string
{
}

class InviteResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class LoginOrSignupResponse
{
    public string $member_id;
    public bool $member_created;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        bool $member_created,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member_created = $member_created;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member_created'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member_created' => $this->member_created,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class InviteRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

