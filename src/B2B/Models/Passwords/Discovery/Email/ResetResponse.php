<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models\Passwords\Discovery\Email;

class ResetResponse
{
    /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
     */
    public string $requestId;
    /**
    * The returned Intermediate Session Token contains a password factor associated with the Member. If this
    * value is non-empty, the member must complete an MFA step to finish logging in to the Organization. The
    * token can be used with the
    * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms),
    * [TOTP Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-totp), or
    * [Recovery Codes Recover endpoint](https://stytch.com/docs/b2b/api/recovery-codes-recover) to complete an
    * MFA flow and log in to the Organization. The token has a default expiry of 10 minutes. Password factors
    * are not transferable between Organizations, so the intermediate session token is not valid for use with
    * discovery endpoints.
     */
    public string $intermediateSessionToken;
    /** The email address. */
    public string $emailAddress;
    /**
    * An array of `discovered_organization` objects tied to the `intermediate_session_token`, `session_token`,
    * or `session_jwt`. See the
    * [Discovered Organization Object](https://stytch.com/docs/b2b/api/discovered-organization-object) for
    * complete details.
    *
    *   Note that Organizations will only appear here under any of the following conditions:
    *   1. The end user is already a Member of the Organization.
    *   2. The end user is invited to the Organization.
    *   3. The end user can join the Organization because:
    *
    *       a) The Organization allows JIT provisioning.
    *
    *       b) The Organizations' allowed domains list contains the Member's email domain.
    *
    *       c) The Organization has at least one other Member with a verified email address with the same
    * domain as the end user (to prevent phishing attacks).
     */
    public array $discoveredOrganizations;
    /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
     */
    public int $statusCode;

    public function __construct(
        string $requestId,
        string $intermediateSessionToken,
        string $emailAddress,
        array $discoveredOrganizations,
        int $statusCode
    ) {
        $this->requestId = $requestId;
        $this->intermediateSessionToken = $intermediateSessionToken;
        $this->emailAddress = $emailAddress;
        $this->discoveredOrganizations = $discoveredOrganizations;
        $this->statusCode = $statusCode;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['request_id'],
            $data['intermediate_session_token'],
            $data['email_address'],
            isset($data['discovered_organizations']) ? array_map(fn ($item) => \Stytch\B2B\Models\Discovery\DiscoveredOrganization::fromArray($item), $data['discovered_organizations']) : [],
            $data['status_code']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'request_id' => $this->requestId,
            'intermediate_session_token' => $this->intermediateSessionToken,
            'email_address' => $this->emailAddress,
            'discovered_organizations' => $this->discoveredOrganizations,
            'status_code' => $this->statusCode,
        ];
    }
}
