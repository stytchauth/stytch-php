<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models\Organizations;


final class MemberRoleSource
{
    /**
    * The type of role assignment. The possible values are:
    *  
    *   `direct_assignment` – an explicitly assigned Role.
    * 
    *   Directly assigned roles can be updated by passing in the `roles` argument to the
    *   [Update Member](https://stytch.com/docs/b2b/api/update-member) endpoint.
    *  
    *   `email_assignment` – an implicit Role granted by the Member's email domain, regardless of their login
    * method.
    * 
    *   Email implicit role assignments can be updated by passing in the
    * `rbac_email_implicit_role_assignments` argument to
    *   the [Update Organization](https://stytch.com/docs/b2b/api/update-organization) endpoint.
    *  
    *   `sso_connection` – an implicit Role granted by the Member's SSO connection. This is currently only
    * available
    *   for SAML connections and not for OIDC. If the Member has a SAML Member registration with the given
    * connection, this
    *   role assignment will appear in the list. However, for authorization check purposes (in
    *   [sessions authenticate](https://stytch.com/docs/b2b/api/authenticate-session) or in any endpoint that
    * enforces RBAC with session
    *   headers), the Member will only be granted the Role if their session contains an authentication factor
    * with the
    *   specified SAML connection.
    * 
    *   SAML connection implicit role assignments can be updated by passing in the
    *   `saml_connection_implicit_role_assignments` argument to the
    *   [Update SAML connection](https://stytch.com/docs/b2b/api/update-saml-connection) endpoint.
    *  
    *   `sso_connection_group` – an implicit Role granted by the Member's SSO connection and group. This is
    * currently only
    *   available for SAML connections and not for OIDC. If the Member has a SAML Member registration with the
    * given
    *   connection, and belongs to a specific group within the IdP, this role assignment will appear in the
    * list. However,
    *   for authorization check purposes (in
    * [sessions authenticate](https://stytch.com/docs/b2b/api/authenticate-session) or in any endpoint
    *   that enforces RBAC with session headers), the Member will only be granted the role if their session
    * contains an
    *   authentication factor with the specified SAML connection.
    * 
    *   SAML group implicit role assignments can be updated by passing in the
    * `saml_group_implicit_role_assignments`
    *   argument to the [Update SAML connection](https://stytch.com/docs/b2b/api/update-saml-connection)
    * endpoint.
    * 
    *     `scim_connection_group` – an implicit Role granted by the Member's SCIM connection and group. If the
    * Member has
    *   a SCIM Member registration with the given connection, and belongs to a specific group within the IdP,
    * this role assignment will appear in the list.
    * 
    *   SCIM group implicit role assignments can be updated by passing in the
    * `scim_group_implicit_role_assignments`
    *   argument to the [Update SCIM connection](https://stytch.com/docs/b2b/api/update-scim-connection)
    * endpoint.
     */
    public string $type;
    /**
    * An object containing additional metadata about the source assignment. The fields will vary depending
    *   on the role assignment type as follows:
    *  
    *   `direct_assignment` – no additional details.
    *  
    *   `email_assignment` – will contain the email domain that granted the assignment.
    *   
    *   `sso_connection` – will contain the `connection_id` of the SAML connection that granted the assignment.
    *  
    *   `sso_connection_group` – will contain the `connection_id` of the SAML connection and the name of the
    * `group`
    *   that granted the assignment.
    *  
    *   `scim_connection_group` – will contain the `connection_id` of the SAML connection and the `group_id`
    *   that granted the assignment.
     */
    public ?array $details = null;

    public function __construct(
        string $type,
        ?array $details = null
    ) {
        $this->type = $type;
        $this->details = $details;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['type'],
            $data['details'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'type' => $this->type,
            'details' => $this->details,
        ];
    }
}