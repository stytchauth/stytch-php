<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models\Organizations;


final class Organization
{
    /**
    * Globally unique UUID that identifies a specific Organization. The `organization_id` is critical to
    * perform operations on an Organization, so be sure to preserve this value. You may also use the
    * organization_slug or organization_external_id here as a convenience.
     */
    public string $organizationId;
    /** The name of the Organization. Must be between 1 and 128 characters in length. */
    public string $organizationName;
    /** The image URL of the Organization logo. */
    public string $organizationLogoURL;
    /**
    * The unique URL slug of the Organization. The slug only accepts alphanumeric characters and the following
    * reserved characters: `-` `.` `_` `~`. Must be between 2 and 128 characters in length. Wherever an
    * organization_id is expected in a path or request parameter, you may also use the organization_slug as a
    * convenience.
     */
    public string $organizationSlug;
    /**
    * The authentication setting that controls the JIT provisioning of Members when authenticating via SSO.
    * The accepted values are:
    *  
    *   `ALL_ALLOWED` – the default setting, new Members will be automatically provisioned upon successful
    * authentication via any of the Organization's `sso_active_connections`.
    *  
    *   `RESTRICTED` – only new Members with SSO logins that comply with
    * `sso_jit_provisioning_allowed_connections` can be provisioned upon authentication.
    *  
    *   `NOT_ALLOWED` – disable JIT provisioning via SSO.
     */
    public string $ssoJITProvisioning;
    /**
    * An array of `connection_id`s that reference
    * [SAML Connection objects](https://stytch.com/docs/b2b/api/saml-connection-object).
    *   Only these connections will be allowed to JIT provision Members via SSO when `sso_jit_provisioning` is
    * set to `RESTRICTED`.
     */
    public array $ssoJITProvisioningAllowedConnections;
    /**
    * An array of active [SAML Connection references](https://stytch.com/docs/b2b/api/saml-connection-object)
    * or [OIDC Connection references](https://stytch.com/docs/b2b/api/oidc-connection-object).
     */
    public array $ssoActiveConnections;
    /**
    * An array of email domains that allow invites or JIT provisioning for new Members. This list is enforced
    * when either `email_invites` or `email_jit_provisioning` is set to `RESTRICTED`.
    *    
    *    
    *     Common domains such as `gmail.com` are not allowed. See the
    * [common email domains resource](https://stytch.com/docs/b2b/api/common-email-domains) for the full list.
     */
    public array $emailAllowedDomains;
    /**
    * The authentication setting that controls how a new Member can be provisioned by authenticating via Email
    * Magic Link or OAuth. The accepted values are:
    *  
    *   `RESTRICTED` – only new Members with verified emails that comply with `email_allowed_domains` can be
    * provisioned upon authentication via Email Magic Link or OAuth.
    *  
    *   `NOT_ALLOWED` – the default setting, disables JIT provisioning via Email Magic Link and OAuth.
     */
    public string $emailJITProvisioning;
    /**
    * The authentication setting that controls how a new Member can be invited to an organization by email.
    * The accepted values are:
    *  
    *   `ALL_ALLOWED` – any new Member can be invited to join via email.
    *  
    *   `RESTRICTED` – only new Members with verified emails that comply with `email_allowed_domains` can be
    * invited via email.
    *  
    *   `NOT_ALLOWED` – disable email invites.
     */
    public string $emailInvites;
    /**
    * The setting that controls which authentication methods can be used by Members of an Organization. The
    * accepted values are:
    *  
    *   `ALL_ALLOWED` – the default setting which allows all authentication methods to be used.
    *  
    *   `RESTRICTED` – only methods that comply with `allowed_auth_methods` can be used for authentication.
    * This setting does not apply to Members with `is_breakglass` set to `true`.
     */
    public string $authMethods;
    /**
    * An array of allowed authentication methods. This list is enforced when `auth_methods` is set to
    * `RESTRICTED`.
    *   The list's accepted values are: `sso`, `magic_link`, `email_otp`, `password`, `google_oauth`,
    * `microsoft_oauth`, `slack_oauth`, `github_oauth`, and `hubspot_oauth`.
     */
    public array $allowedAuthMethods;
    public string $mfaPolicy;
    /**
    * Implicit role assignments based off of email domains.
    *   For each domain-Role pair, all Members whose email addresses have the specified email domain will be
    * granted the
    *   associated Role, regardless of their login method. See the
    * [RBAC guide](https://stytch.com/docs/b2b/guides/rbac/role-assignment)
    *   for more information about role assignment.
     */
    public array $rbacEmailImplicitRoleAssignments;
    /**
    * The setting that controls which MFA methods can be used by Members of an Organization. The accepted
    * values are:
    *  
    *   `ALL_ALLOWED` – the default setting which allows all authentication methods to be used.
    *  
    *   `RESTRICTED` – only methods that comply with `allowed_mfa_methods` can be used for authentication.
    * This setting does not apply to Members with `is_breakglass` set to `true`.
     */
    public string $mfaMethods;
    /**
    * An array of allowed MFA authentication methods. This list is enforced when `mfa_methods` is set to
    * `RESTRICTED`.
    *   The list's accepted values are: `sms_otp` and `totp`.
     */
    public array $allowedMfaMethods;
    /**
    * The authentication setting that controls how a new Member can JIT provision into an organization by
    * tenant. The accepted values are:
    *  
    *   `RESTRICTED` – only new Members with tenants in `allowed_oauth_tenants` can JIT provision via tenant.
    *  
    *   `NOT_ALLOWED` – the default setting, disables JIT provisioning by OAuth Tenant.
     */
    public string $oauthTenantJITProvisioning;
    public array $claimedEmailDomains;
    /**
    * The authentication setting that sets the Organization's policy towards first party Connected Apps. The
    * accepted values are:
    *  
    *   `ALL_ALLOWED` – the default setting, any first party Connected App in the Project is permitted for use
    * by Members.
    *  
    *   `RESTRICTED` – only first party Connected Apps with IDs in `allowed_first_party_connected_apps` can be
    * used by Members.
    *  
    *   `NOT_ALLOWED` – no first party Connected Apps are permitted.
     */
    public string $firstPartyConnectedAppsAllowedType;
    /**
    * An array of first party Connected App IDs that are allowed for the Organization. Only used when the
    * Organization's `first_party_connected_apps_allowed_type` is `RESTRICTED`.
     */
    public array $allowedFirstPartyConnectedApps;
    /**
    * The authentication setting that sets the Organization's policy towards third party Connected Apps. The
    * accepted values are:
    *  
    *   `ALL_ALLOWED` – the default setting, any third party Connected App in the Project is permitted for use
    * by Members.
    *  
    *   `RESTRICTED` – only third party Connected Apps with IDs in `allowed_first_party_connected_apps` can be
    * used by Members.
    *  
    *   `NOT_ALLOWED` – no third party Connected Apps are permitted.
     */
    public string $thirdPartyConnectedAppsAllowedType;
    /**
    * An array of third party Connected App IDs that are allowed for the Organization. Only used when the
    * Organization's `third_party_connected_apps_allowed_type` is `RESTRICTED`.
     */
    public array $allowedThirdPartyConnectedApps;
    /** An arbitrary JSON object for storing application-specific data or identity-provider-specific data. */
    public ?array $trustedMetadata = null;
    /**
    * The timestamp of the Organization's creation. Values conform to the RFC 3339 standard and are expressed
    * in UTC, e.g. `2021-12-29T12:33:09Z`.
     */
    public ?string $createdAt = null;
    /**
    * The timestamp of when the Organization was last updated. Values conform to the RFC 3339 standard and are
    * expressed in UTC, e.g. `2021-12-29T12:33:09Z`.
     */
    public ?string $updatedAt = null;
    /** A unique identifier for the organization. */
    public ?string $organizationExternalId = null;
    /** The default connection used for SSO when there are multiple active connections. */
    public ?string $ssoDefaultConnectionId = null;
    /** An active [SCIM Connection references](https://stytch.com/docs/b2b/api/scim-connection-object). */
    public ?ActiveSCIMConnection $scimActiveConnection = null;
    /**
    * A map of allowed OAuth tenants. If this field is not passed in, the Organization will not allow JIT
    * provisioning by OAuth Tenant. Allowed keys are "slack", "hubspot", and "github".
     */
    public ?array $allowedOAuthTenants = null;

    public function __construct(
        string $organizationId,
        string $organizationName,
        string $organizationLogoURL,
        string $organizationSlug,
        string $ssoJITProvisioning,
        array $ssoJITProvisioningAllowedConnections,
        array $ssoActiveConnections,
        array $emailAllowedDomains,
        string $emailJITProvisioning,
        string $emailInvites,
        string $authMethods,
        array $allowedAuthMethods,
        string $mfaPolicy,
        array $rbacEmailImplicitRoleAssignments,
        string $mfaMethods,
        array $allowedMfaMethods,
        string $oauthTenantJITProvisioning,
        array $claimedEmailDomains,
        string $firstPartyConnectedAppsAllowedType,
        array $allowedFirstPartyConnectedApps,
        string $thirdPartyConnectedAppsAllowedType,
        array $allowedThirdPartyConnectedApps,
        ?array $trustedMetadata = null,
        ?string $createdAt = null,
        ?string $updatedAt = null,
        ?string $organizationExternalId = null,
        ?string $ssoDefaultConnectionId = null,
        ?ActiveSCIMConnection $scimActiveConnection = null,
        ?array $allowedOAuthTenants = null
    ) {
        $this->organizationId = $organizationId;
        $this->organizationName = $organizationName;
        $this->organizationLogoURL = $organizationLogoURL;
        $this->organizationSlug = $organizationSlug;
        $this->ssoJITProvisioning = $ssoJITProvisioning;
        $this->ssoJITProvisioningAllowedConnections = $ssoJITProvisioningAllowedConnections;
        $this->ssoActiveConnections = $ssoActiveConnections;
        $this->emailAllowedDomains = $emailAllowedDomains;
        $this->emailJITProvisioning = $emailJITProvisioning;
        $this->emailInvites = $emailInvites;
        $this->authMethods = $authMethods;
        $this->allowedAuthMethods = $allowedAuthMethods;
        $this->mfaPolicy = $mfaPolicy;
        $this->rbacEmailImplicitRoleAssignments = $rbacEmailImplicitRoleAssignments;
        $this->mfaMethods = $mfaMethods;
        $this->allowedMfaMethods = $allowedMfaMethods;
        $this->oauthTenantJITProvisioning = $oauthTenantJITProvisioning;
        $this->claimedEmailDomains = $claimedEmailDomains;
        $this->firstPartyConnectedAppsAllowedType = $firstPartyConnectedAppsAllowedType;
        $this->allowedFirstPartyConnectedApps = $allowedFirstPartyConnectedApps;
        $this->thirdPartyConnectedAppsAllowedType = $thirdPartyConnectedAppsAllowedType;
        $this->allowedThirdPartyConnectedApps = $allowedThirdPartyConnectedApps;
        $this->trustedMetadata = $trustedMetadata;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->organizationExternalId = $organizationExternalId;
        $this->ssoDefaultConnectionId = $ssoDefaultConnectionId;
        $this->scimActiveConnection = $scimActiveConnection;
        $this->allowedOAuthTenants = $allowedOAuthTenants;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization_id'],
            $data['organization_name'],
            $data['organization_logo_url'],
            $data['organization_slug'],
            $data['sso_jit_provisioning'],
            $data['sso_jit_provisioning_allowed_connections'],
            isset($data['sso_active_connections']) ? array_map(fn($item) => ActiveSSOConnection::fromArray($item), $data['sso_active_connections']) : [],
            $data['email_allowed_domains'],
            $data['email_jit_provisioning'],
            $data['email_invites'],
            $data['auth_methods'],
            $data['allowed_auth_methods'],
            $data['mfa_policy'],
            isset($data['rbac_email_implicit_role_assignments']) ? array_map(fn($item) => EmailImplicitRoleAssignment::fromArray($item), $data['rbac_email_implicit_role_assignments']) : [],
            $data['mfa_methods'],
            $data['allowed_mfa_methods'],
            $data['oauth_tenant_jit_provisioning'],
            $data['claimed_email_domains'],
            $data['first_party_connected_apps_allowed_type'],
            $data['allowed_first_party_connected_apps'],
            $data['third_party_connected_apps_allowed_type'],
            $data['allowed_third_party_connected_apps'],
            $data['trusted_metadata'] ?? null,
            $data['created_at'] ?? null,
            $data['updated_at'] ?? null,
            $data['organization_external_id'] ?? null,
            $data['sso_default_connection_id'] ?? null,
            $data['scim_active_connection'] !== null ? ActiveSCIMConnection::fromArray($data['scim_active_connection']) : null,
            $data['allowed_oauth_tenants'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization_id' => $this->organizationId,
            'organization_name' => $this->organizationName,
            'organization_logo_url' => $this->organizationLogoURL,
            'organization_slug' => $this->organizationSlug,
            'sso_jit_provisioning' => $this->ssoJITProvisioning,
            'sso_jit_provisioning_allowed_connections' => $this->ssoJITProvisioningAllowedConnections,
            'sso_active_connections' => $this->ssoActiveConnections,
            'email_allowed_domains' => $this->emailAllowedDomains,
            'email_jit_provisioning' => $this->emailJITProvisioning,
            'email_invites' => $this->emailInvites,
            'auth_methods' => $this->authMethods,
            'allowed_auth_methods' => $this->allowedAuthMethods,
            'mfa_policy' => $this->mfaPolicy,
            'rbac_email_implicit_role_assignments' => $this->rbacEmailImplicitRoleAssignments,
            'mfa_methods' => $this->mfaMethods,
            'allowed_mfa_methods' => $this->allowedMfaMethods,
            'oauth_tenant_jit_provisioning' => $this->oauthTenantJITProvisioning,
            'claimed_email_domains' => $this->claimedEmailDomains,
            'first_party_connected_apps_allowed_type' => $this->firstPartyConnectedAppsAllowedType,
            'allowed_first_party_connected_apps' => $this->allowedFirstPartyConnectedApps,
            'third_party_connected_apps_allowed_type' => $this->thirdPartyConnectedAppsAllowedType,
            'allowed_third_party_connected_apps' => $this->allowedThirdPartyConnectedApps,
            'trusted_metadata' => $this->trustedMetadata,
            'created_at' => $this->createdAt,
            'updated_at' => $this->updatedAt,
            'organization_external_id' => $this->organizationExternalId,
            'sso_default_connection_id' => $this->ssoDefaultConnectionId,
            'scim_active_connection' => $this->scimActiveConnection,
            'allowed_oauth_tenants' => $this->allowedOAuthTenants,
        ];
    }
}