<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models;

class ResultsMetadata
{
    public int $total;
    public ?string $next_cursor;

    public function __construct(
        int $total,
        ?string $next_cursor
    ) {
        $this->total = $total;
        $this->next_cursor = $next_cursor;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['total'],
            $data['next_cursor'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'total' => $this->total,
            'next_cursor' => $this->next_cursor,
        ];
    }
}

class HubspotProviderInfo
{
    public string $provider_subject;
    public string $provider_tenant_id;
    public string $access_token;
    public int $access_token_expires_in;
    public array $scopes;
    public ?string $refresh_token;

    public function __construct(
        string $provider_subject,
        string $provider_tenant_id,
        string $access_token,
        int $access_token_expires_in,
        array $scopes,
        ?string $refresh_token
    ) {
        $this->provider_subject = $provider_subject;
        $this->provider_tenant_id = $provider_tenant_id;
        $this->access_token = $access_token;
        $this->access_token_expires_in = $access_token_expires_in;
        $this->scopes = $scopes;
        $this->refresh_token = $refresh_token;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_subject'],
            $data['provider_tenant_id'],
            $data['access_token'],
            $data['access_token_expires_in'],
            $data['scopes'],
            $data['refresh_token'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_subject' => $this->provider_subject,
            'provider_tenant_id' => $this->provider_tenant_id,
            'access_token' => $this->access_token,
            'access_token_expires_in' => $this->access_token_expires_in,
            'scopes' => $this->scopes,
            'refresh_token' => $this->refresh_token,
        ];
    }
}

class MemberUpdateResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class OIDCProviderInfo
{
    public string $provider_subject;
    public string $id_token;
    public string $access_token;
    public int $access_token_expires_in;
    public array $scopes;
    public ?string $refresh_token;
    public string $connection_id;

    public function __construct(
        string $provider_subject,
        string $id_token,
        string $access_token,
        int $access_token_expires_in,
        array $scopes,
        ?string $refresh_token,
        string $connection_id
    ) {
        $this->provider_subject = $provider_subject;
        $this->id_token = $id_token;
        $this->access_token = $access_token;
        $this->access_token_expires_in = $access_token_expires_in;
        $this->scopes = $scopes;
        $this->refresh_token = $refresh_token;
        $this->connection_id = $connection_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_subject'],
            $data['id_token'],
            $data['access_token'],
            $data['access_token_expires_in'],
            $data['scopes'],
            $data['refresh_token'] ?? null,
            $data['connection_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_subject' => $this->provider_subject,
            'id_token' => $this->id_token,
            'access_token' => $this->access_token,
            'access_token_expires_in' => $this->access_token_expires_in,
            'scopes' => $this->scopes,
            'refresh_token' => $this->refresh_token,
            'connection_id' => $this->connection_id,
        ];
    }
}

class MemberUnlinkRetiredEmailResponse
{
    public string $member_id;
    public string $organization_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        string $organization_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->organization_id = $organization_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['organization_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'organization_id' => $this->organization_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class MemberGetResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class OrganizationConnectedAppWithActiveMembersResponse
{
    public string $connected_app_id;
    public string $name;
    public string $description;
    public string $client_type;
    public ?string $logo_url;
    public ?array $active_members;

    public function __construct(
        string $connected_app_id,
        string $name,
        string $description,
        string $client_type,
        ?string $logo_url,
        ?array $active_members
    ) {
        $this->connected_app_id = $connected_app_id;
        $this->name = $name;
        $this->description = $description;
        $this->client_type = $client_type;
        $this->logo_url = $logo_url;
        $this->active_members = $active_members;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connected_app_id'],
            $data['name'],
            $data['description'],
            $data['client_type'],
            $data['logo_url'] ?? null,
            $data['active_members'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connected_app_id' => $this->connected_app_id,
            'name' => $this->name,
            'description' => $this->description,
            'client_type' => $this->client_type,
            'logo_url' => $this->logo_url,
            'active_members' => $this->active_members,
        ];
    }
}

class ActiveSCIMConnection
{
    public string $connection_id;
    public string $display_name;
    public string $bearer_token_last_four;
    public ?string $bearer_token_expires_at;

    public function __construct(
        string $connection_id,
        string $display_name,
        string $bearer_token_last_four,
        ?string $bearer_token_expires_at
    ) {
        $this->connection_id = $connection_id;
        $this->display_name = $display_name;
        $this->bearer_token_last_four = $bearer_token_last_four;
        $this->bearer_token_expires_at = $bearer_token_expires_at;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection_id'],
            $data['display_name'],
            $data['bearer_token_last_four'],
            $data['bearer_token_expires_at'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection_id' => $this->connection_id,
            'display_name' => $this->display_name,
            'bearer_token_last_four' => $this->bearer_token_last_four,
            'bearer_token_expires_at' => $this->bearer_token_expires_at,
        ];
    }
}

class MemberRoleSource
{
    public string $type;
    public ?array $details;

    public function __construct(
        string $type,
        ?array $details
    ) {
        $this->type = $type;
        $this->details = $details;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['type'],
            $data['details'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'type' => $this->type,
            'details' => $this->details,
        ];
    }
}

class OrgDeleteResponse
{
    public string $organization_id;

    public function __construct(
        string $organization_id
    ) {
        $this->organization_id = $organization_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization_id' => $this->organization_id,
        ];
    }
}

class OrgSearchResponse
{
    public ?array $organizations;
    public ResultsMetadata $results_metadata;

    public function __construct(
        ?array $organizations,
        ResultsMetadata $results_metadata
    ) {
        $this->organizations = $organizations;
        $this->results_metadata = $results_metadata;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organizations'] ?? null,
            $data['results_metadata']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organizations' => $this->organizations,
            'results_metadata' => $this->results_metadata,
        ];
    }
}

class MemberRole
{
    public string $role_id;
    public ?array $sources;

    public function __construct(
        string $role_id,
        ?array $sources
    ) {
        $this->role_id = $role_id;
        $this->sources = $sources;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['role_id'],
            $data['sources'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'role_id' => $this->role_id,
            'sources' => $this->sources,
        ];
    }
}

class OrganizationConnectedAppActiveMember
{
    public string $member_id;
    public array $granted_scopes;

    public function __construct(
        string $member_id,
        array $granted_scopes
    ) {
        $this->member_id = $member_id;
        $this->granted_scopes = $granted_scopes;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['granted_scopes']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'granted_scopes' => $this->granted_scopes,
        ];
    }
}

class SlackProviderInfo
{
    public string $provider_subject;
    public string $provider_tenant_id;
    public string $access_token;
    public array $scopes;
    public string $bot_access_token;
    public array $bot_scopes;

    public function __construct(
        string $provider_subject,
        string $provider_tenant_id,
        string $access_token,
        array $scopes,
        string $bot_access_token,
        array $bot_scopes
    ) {
        $this->provider_subject = $provider_subject;
        $this->provider_tenant_id = $provider_tenant_id;
        $this->access_token = $access_token;
        $this->scopes = $scopes;
        $this->bot_access_token = $bot_access_token;
        $this->bot_scopes = $bot_scopes;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_subject'],
            $data['provider_tenant_id'],
            $data['access_token'],
            $data['scopes'],
            $data['bot_access_token'],
            $data['bot_scopes']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_subject' => $this->provider_subject,
            'provider_tenant_id' => $this->provider_tenant_id,
            'access_token' => $this->access_token,
            'scopes' => $this->scopes,
            'bot_access_token' => $this->bot_access_token,
            'bot_scopes' => $this->bot_scopes,
        ];
    }
}

class OIDCInformationResponse
{
    public ?array $registrations;

    public function __construct(
        ?array $registrations
    ) {
        $this->registrations = $registrations;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['registrations'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'registrations' => $this->registrations,
        ];
    }
}

class GetResponse
{
    public Organization $organization;

    public function __construct(
        Organization $organization
    ) {
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization' => $this->organization,
        ];
    }
}

class HubspotInformationResponse
{
    public string $provider_type;
    public ?array $registrations;

    public function __construct(
        string $provider_type,
        ?array $registrations
    ) {
        $this->provider_type = $provider_type;
        $this->registrations = $registrations;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['registrations'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'registrations' => $this->registrations,
        ];
    }
}

class RevokeConnectedAppResponse
{

    public function __construct(
    ) {
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
        ];
    }
}

class MemberReactivateResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class MemberDeletePasswordResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class EmailImplicitRoleAssignment
{
    public string $domain;
    public string $role_id;

    public function __construct(
        string $domain,
        string $role_id
    ) {
        $this->domain = $domain;
        $this->role_id = $role_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['domain'],
            $data['role_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'domain' => $this->domain,
            'role_id' => $this->role_id,
        ];
    }
}

class MemberDeleteResponse
{
    public string $member_id;

    public function __construct(
        string $member_id
    ) {
        $this->member_id = $member_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
        ];
    }
}

class SSORegistration
{
    public string $connection_id;
    public string $external_id;
    public string $registration_id;
    public ?array $sso_attributes;

    public function __construct(
        string $connection_id,
        string $external_id,
        string $registration_id,
        ?array $sso_attributes
    ) {
        $this->connection_id = $connection_id;
        $this->external_id = $external_id;
        $this->registration_id = $registration_id;
        $this->sso_attributes = $sso_attributes;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection_id'],
            $data['external_id'],
            $data['registration_id'],
            $data['sso_attributes'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection_id' => $this->connection_id,
            'external_id' => $this->external_id,
            'registration_id' => $this->registration_id,
            'sso_attributes' => $this->sso_attributes,
        ];
    }
}

class MicrosoftInformationResponse
{
    public string $provider_type;
    public string $provider_subject;
    public string $access_token;
    public int $access_token_expires_in;
    public string $id_token;
    public array $scopes;
    public ?string $refresh_token;

    public function __construct(
        string $provider_type,
        string $provider_subject,
        string $access_token,
        int $access_token_expires_in,
        string $id_token,
        array $scopes,
        ?string $refresh_token
    ) {
        $this->provider_type = $provider_type;
        $this->provider_subject = $provider_subject;
        $this->access_token = $access_token;
        $this->access_token_expires_in = $access_token_expires_in;
        $this->id_token = $id_token;
        $this->scopes = $scopes;
        $this->refresh_token = $refresh_token;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['provider_subject'],
            $data['access_token'],
            $data['access_token_expires_in'],
            $data['id_token'],
            $data['scopes'],
            $data['refresh_token'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'provider_subject' => $this->provider_subject,
            'access_token' => $this->access_token,
            'access_token_expires_in' => $this->access_token_expires_in,
            'id_token' => $this->id_token,
            'scopes' => $this->scopes,
            'refresh_token' => $this->refresh_token,
        ];
    }
}

class GithubProviderInfo
{
    public string $provider_subject;
    public array $provider_tenant_ids;
    public string $access_token;
    public array $scopes;

    public function __construct(
        string $provider_subject,
        array $provider_tenant_ids,
        string $access_token,
        array $scopes
    ) {
        $this->provider_subject = $provider_subject;
        $this->provider_tenant_ids = $provider_tenant_ids;
        $this->access_token = $access_token;
        $this->scopes = $scopes;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_subject'],
            $data['provider_tenant_ids'],
            $data['access_token'],
            $data['scopes']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_subject' => $this->provider_subject,
            'provider_tenant_ids' => $this->provider_tenant_ids,
            'access_token' => $this->access_token,
            'scopes' => $this->scopes,
        ];
    }
}

class SlackInformationResponse
{
    public string $provider_type;
    public ?array $registrations;

    public function __construct(
        string $provider_type,
        ?array $registrations
    ) {
        $this->provider_type = $provider_type;
        $this->registrations = $registrations;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['registrations'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'registrations' => $this->registrations,
        ];
    }
}

class RetiredEmail
{
    public string $email_id;
    public string $email_address;

    public function __construct(
        string $email_id,
        string $email_address
    ) {
        $this->email_id = $email_id;
        $this->email_address = $email_address;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['email_id'],
            $data['email_address']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'email_id' => $this->email_id,
            'email_address' => $this->email_address,
        ];
    }
}

class OrganizationConnectedApp
{
    public string $connected_app_id;
    public string $name;
    public string $description;
    public string $client_type;
    public ?string $logo_url;

    public function __construct(
        string $connected_app_id,
        string $name,
        string $description,
        string $client_type,
        ?string $logo_url
    ) {
        $this->connected_app_id = $connected_app_id;
        $this->name = $name;
        $this->description = $description;
        $this->client_type = $client_type;
        $this->logo_url = $logo_url;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connected_app_id'],
            $data['name'],
            $data['description'],
            $data['client_type'],
            $data['logo_url'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connected_app_id' => $this->connected_app_id,
            'name' => $this->name,
            'description' => $this->description,
            'client_type' => $this->client_type,
            'logo_url' => $this->logo_url,
        ];
    }
}

class ExternalSearchQuery
{
    public string $operator;
    public ?array $operands;

    public function __construct(
        string $operator,
        ?array $operands
    ) {
        $this->operator = $operator;
        $this->operands = $operands;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['operator'],
            $data['operands'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'operator' => $this->operator,
            'operands' => $this->operands,
        ];
    }
}

class MemberSearchResponse
{
    public ?array $members;
    public ResultsMetadata $results_metadata;
    public ?array $organizations;

    public function __construct(
        ?array $members,
        ResultsMetadata $results_metadata,
        ?array $organizations
    ) {
        $this->members = $members;
        $this->results_metadata = $results_metadata;
        $this->organizations = $organizations;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['members'] ?? null,
            $data['results_metadata'],
            $data['organizations'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'members' => $this->members,
            'results_metadata' => $this->results_metadata,
            'organizations' => $this->organizations,
        ];
    }
}

class GetMetricsResponse
{
    public int $member_count;

    public function __construct(
        int $member_count
    ) {
        $this->member_count = $member_count;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_count']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_count' => $this->member_count,
        ];
    }
}

class Organization
{
    public string $organization_id;
    public string $organization_name;
    public string $organization_logo_url;
    public string $organization_slug;
    public ?array $trusted_metadata;
    public ?string $created_at;
    public ?string $updated_at;
    public ?string $organization_external_id;
    public ?string $sso_default_connection_id;
    public string $sso_jit_provisioning;
    public array $sso_jit_provisioning_allowed_connections;
    public ?array $sso_active_connections;
    public array $email_allowed_domains;
    public string $email_jit_provisioning;
    public string $email_invites;
    public string $auth_methods;
    public array $allowed_auth_methods;
    public string $mfa_policy;
    public ?array $rbac_email_implicit_role_assignments;
    public string $mfa_methods;
    public array $allowed_mfa_methods;
    public ?ActiveSCIMConnection $scim_active_connection;
    public string $oauth_tenant_jit_provisioning;
    public ?array $allowed_oauth_tenants;
    public array $claimed_email_domains;
    public string $first_party_connected_apps_allowed_type;
    public array $allowed_first_party_connected_apps;
    public string $third_party_connected_apps_allowed_type;
    public array $allowed_third_party_connected_apps;

    public function __construct(
        string $organization_id,
        string $organization_name,
        string $organization_logo_url,
        string $organization_slug,
        ?array $trusted_metadata,
        ?string $created_at,
        ?string $updated_at,
        ?string $organization_external_id,
        ?string $sso_default_connection_id,
        string $sso_jit_provisioning,
        array $sso_jit_provisioning_allowed_connections,
        ?array $sso_active_connections,
        array $email_allowed_domains,
        string $email_jit_provisioning,
        string $email_invites,
        string $auth_methods,
        array $allowed_auth_methods,
        string $mfa_policy,
        ?array $rbac_email_implicit_role_assignments,
        string $mfa_methods,
        array $allowed_mfa_methods,
        ?ActiveSCIMConnection $scim_active_connection,
        string $oauth_tenant_jit_provisioning,
        ?array $allowed_oauth_tenants,
        array $claimed_email_domains,
        string $first_party_connected_apps_allowed_type,
        array $allowed_first_party_connected_apps,
        string $third_party_connected_apps_allowed_type,
        array $allowed_third_party_connected_apps
    ) {
        $this->organization_id = $organization_id;
        $this->organization_name = $organization_name;
        $this->organization_logo_url = $organization_logo_url;
        $this->organization_slug = $organization_slug;
        $this->trusted_metadata = $trusted_metadata;
        $this->created_at = $created_at;
        $this->updated_at = $updated_at;
        $this->organization_external_id = $organization_external_id;
        $this->sso_default_connection_id = $sso_default_connection_id;
        $this->sso_jit_provisioning = $sso_jit_provisioning;
        $this->sso_jit_provisioning_allowed_connections = $sso_jit_provisioning_allowed_connections;
        $this->sso_active_connections = $sso_active_connections;
        $this->email_allowed_domains = $email_allowed_domains;
        $this->email_jit_provisioning = $email_jit_provisioning;
        $this->email_invites = $email_invites;
        $this->auth_methods = $auth_methods;
        $this->allowed_auth_methods = $allowed_auth_methods;
        $this->mfa_policy = $mfa_policy;
        $this->rbac_email_implicit_role_assignments = $rbac_email_implicit_role_assignments;
        $this->mfa_methods = $mfa_methods;
        $this->allowed_mfa_methods = $allowed_mfa_methods;
        $this->scim_active_connection = $scim_active_connection;
        $this->oauth_tenant_jit_provisioning = $oauth_tenant_jit_provisioning;
        $this->allowed_oauth_tenants = $allowed_oauth_tenants;
        $this->claimed_email_domains = $claimed_email_domains;
        $this->first_party_connected_apps_allowed_type = $first_party_connected_apps_allowed_type;
        $this->allowed_first_party_connected_apps = $allowed_first_party_connected_apps;
        $this->third_party_connected_apps_allowed_type = $third_party_connected_apps_allowed_type;
        $this->allowed_third_party_connected_apps = $allowed_third_party_connected_apps;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization_id'],
            $data['organization_name'],
            $data['organization_logo_url'],
            $data['organization_slug'],
            $data['trusted_metadata'] ?? null,
            $data['created_at'] ?? null,
            $data['updated_at'] ?? null,
            $data['organization_external_id'] ?? null,
            $data['sso_default_connection_id'] ?? null,
            $data['sso_jit_provisioning'],
            $data['sso_jit_provisioning_allowed_connections'],
            $data['sso_active_connections'] ?? null,
            $data['email_allowed_domains'],
            $data['email_jit_provisioning'],
            $data['email_invites'],
            $data['auth_methods'],
            $data['allowed_auth_methods'],
            $data['mfa_policy'],
            $data['rbac_email_implicit_role_assignments'] ?? null,
            $data['mfa_methods'],
            $data['allowed_mfa_methods'],
            $data['scim_active_connection'] ?? null,
            $data['oauth_tenant_jit_provisioning'],
            $data['allowed_oauth_tenants'] ?? null,
            $data['claimed_email_domains'],
            $data['first_party_connected_apps_allowed_type'],
            $data['allowed_first_party_connected_apps'],
            $data['third_party_connected_apps_allowed_type'],
            $data['allowed_third_party_connected_apps']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization_id' => $this->organization_id,
            'organization_name' => $this->organization_name,
            'organization_logo_url' => $this->organization_logo_url,
            'organization_slug' => $this->organization_slug,
            'trusted_metadata' => $this->trusted_metadata,
            'created_at' => $this->created_at,
            'updated_at' => $this->updated_at,
            'organization_external_id' => $this->organization_external_id,
            'sso_default_connection_id' => $this->sso_default_connection_id,
            'sso_jit_provisioning' => $this->sso_jit_provisioning,
            'sso_jit_provisioning_allowed_connections' => $this->sso_jit_provisioning_allowed_connections,
            'sso_active_connections' => $this->sso_active_connections,
            'email_allowed_domains' => $this->email_allowed_domains,
            'email_jit_provisioning' => $this->email_jit_provisioning,
            'email_invites' => $this->email_invites,
            'auth_methods' => $this->auth_methods,
            'allowed_auth_methods' => $this->allowed_auth_methods,
            'mfa_policy' => $this->mfa_policy,
            'rbac_email_implicit_role_assignments' => $this->rbac_email_implicit_role_assignments,
            'mfa_methods' => $this->mfa_methods,
            'allowed_mfa_methods' => $this->allowed_mfa_methods,
            'scim_active_connection' => $this->scim_active_connection,
            'oauth_tenant_jit_provisioning' => $this->oauth_tenant_jit_provisioning,
            'allowed_oauth_tenants' => $this->allowed_oauth_tenants,
            'claimed_email_domains' => $this->claimed_email_domains,
            'first_party_connected_apps_allowed_type' => $this->first_party_connected_apps_allowed_type,
            'allowed_first_party_connected_apps' => $this->allowed_first_party_connected_apps,
            'third_party_connected_apps_allowed_type' => $this->third_party_connected_apps_allowed_type,
            'allowed_third_party_connected_apps' => $this->allowed_third_party_connected_apps,
        ];
    }
}

class MemberConnectedApp
{
    public string $connected_app_id;
    public string $name;
    public string $description;
    public string $client_type;
    public ?string $logo_url;
    public string $scopes_granted;

    public function __construct(
        string $connected_app_id,
        string $name,
        string $description,
        string $client_type,
        ?string $logo_url,
        string $scopes_granted
    ) {
        $this->connected_app_id = $connected_app_id;
        $this->name = $name;
        $this->description = $description;
        $this->client_type = $client_type;
        $this->logo_url = $logo_url;
        $this->scopes_granted = $scopes_granted;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connected_app_id'],
            $data['name'],
            $data['description'],
            $data['client_type'],
            $data['logo_url'] ?? null,
            $data['scopes_granted']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connected_app_id' => $this->connected_app_id,
            'name' => $this->name,
            'description' => $this->description,
            'client_type' => $this->client_type,
            'logo_url' => $this->logo_url,
            'scopes_granted' => $this->scopes_granted,
        ];
    }
}

class MemberDeleteMFATOTPResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class UpdateResponse
{
    public Organization $organization;

    public function __construct(
        Organization $organization
    ) {
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization' => $this->organization,
        ];
    }
}

class MemberGetRequestDangerouslyUnscoped
{
    public string $member_id;
    public ?bool $include_deleted;

    public function __construct(
        string $member_id,
        ?bool $include_deleted
    ) {
        $this->member_id = $member_id;
        $this->include_deleted = $include_deleted;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['include_deleted'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'include_deleted' => $this->include_deleted,
        ];
    }
}

class Member
{
    public string $organization_id;
    public string $member_id;
    public string $email_address;
    public string $status;
    public string $name;
    public ?array $sso_registrations;
    public ?array $trusted_metadata;
    public ?array $untrusted_metadata;
    public bool $is_breakglass;
    public string $member_password_id;
    public ?array $oauth_registrations;
    public bool $email_address_verified;
    public bool $mfa_phone_number_verified;
    public bool $is_admin;
    public string $totp_registration_id;
    public ?string $created_at;
    public ?string $updated_at;
    public ?SCIMRegistration $scim_registration;
    public ?array $retired_email_addresses;
    public ?string $external_id;
    public bool $is_locked;
    public ?string $lock_created_at;
    public ?string $lock_expires_at;
    public bool $mfa_enrolled;
    public string $mfa_phone_number;
    public string $default_mfa_method;
    public ?array $roles;

    public function __construct(
        string $organization_id,
        string $member_id,
        string $email_address,
        string $status,
        string $name,
        ?array $sso_registrations,
        ?array $trusted_metadata,
        ?array $untrusted_metadata,
        bool $is_breakglass,
        string $member_password_id,
        ?array $oauth_registrations,
        bool $email_address_verified,
        bool $mfa_phone_number_verified,
        bool $is_admin,
        string $totp_registration_id,
        ?string $created_at,
        ?string $updated_at,
        ?SCIMRegistration $scim_registration,
        ?array $retired_email_addresses,
        ?string $external_id,
        bool $is_locked,
        ?string $lock_created_at,
        ?string $lock_expires_at,
        bool $mfa_enrolled,
        string $mfa_phone_number,
        string $default_mfa_method,
        ?array $roles
    ) {
        $this->organization_id = $organization_id;
        $this->member_id = $member_id;
        $this->email_address = $email_address;
        $this->status = $status;
        $this->name = $name;
        $this->sso_registrations = $sso_registrations;
        $this->trusted_metadata = $trusted_metadata;
        $this->untrusted_metadata = $untrusted_metadata;
        $this->is_breakglass = $is_breakglass;
        $this->member_password_id = $member_password_id;
        $this->oauth_registrations = $oauth_registrations;
        $this->email_address_verified = $email_address_verified;
        $this->mfa_phone_number_verified = $mfa_phone_number_verified;
        $this->is_admin = $is_admin;
        $this->totp_registration_id = $totp_registration_id;
        $this->created_at = $created_at;
        $this->updated_at = $updated_at;
        $this->scim_registration = $scim_registration;
        $this->retired_email_addresses = $retired_email_addresses;
        $this->external_id = $external_id;
        $this->is_locked = $is_locked;
        $this->lock_created_at = $lock_created_at;
        $this->lock_expires_at = $lock_expires_at;
        $this->mfa_enrolled = $mfa_enrolled;
        $this->mfa_phone_number = $mfa_phone_number;
        $this->default_mfa_method = $default_mfa_method;
        $this->roles = $roles;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization_id'],
            $data['member_id'],
            $data['email_address'],
            $data['status'],
            $data['name'],
            $data['sso_registrations'] ?? null,
            $data['trusted_metadata'] ?? null,
            $data['untrusted_metadata'] ?? null,
            $data['is_breakglass'],
            $data['member_password_id'],
            $data['oauth_registrations'] ?? null,
            $data['email_address_verified'],
            $data['mfa_phone_number_verified'],
            $data['is_admin'],
            $data['totp_registration_id'],
            $data['created_at'] ?? null,
            $data['updated_at'] ?? null,
            $data['scim_registration'] ?? null,
            $data['retired_email_addresses'] ?? null,
            $data['external_id'] ?? null,
            $data['is_locked'],
            $data['lock_created_at'] ?? null,
            $data['lock_expires_at'] ?? null,
            $data['mfa_enrolled'],
            $data['mfa_phone_number'],
            $data['default_mfa_method'],
            $data['roles'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization_id' => $this->organization_id,
            'member_id' => $this->member_id,
            'email_address' => $this->email_address,
            'status' => $this->status,
            'name' => $this->name,
            'sso_registrations' => $this->sso_registrations,
            'trusted_metadata' => $this->trusted_metadata,
            'untrusted_metadata' => $this->untrusted_metadata,
            'is_breakglass' => $this->is_breakglass,
            'member_password_id' => $this->member_password_id,
            'oauth_registrations' => $this->oauth_registrations,
            'email_address_verified' => $this->email_address_verified,
            'mfa_phone_number_verified' => $this->mfa_phone_number_verified,
            'is_admin' => $this->is_admin,
            'totp_registration_id' => $this->totp_registration_id,
            'created_at' => $this->created_at,
            'updated_at' => $this->updated_at,
            'scim_registration' => $this->scim_registration,
            'retired_email_addresses' => $this->retired_email_addresses,
            'external_id' => $this->external_id,
            'is_locked' => $this->is_locked,
            'lock_created_at' => $this->lock_created_at,
            'lock_expires_at' => $this->lock_expires_at,
            'mfa_enrolled' => $this->mfa_enrolled,
            'mfa_phone_number' => $this->mfa_phone_number,
            'default_mfa_method' => $this->default_mfa_method,
            'roles' => $this->roles,
        ];
    }
}

class MemberDeleteMFAPhoneNumberResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class SCIMRegistration
{
    public string $connection_id;
    public ?string $external_id;
    public string $registration_id;
    public ?SCIMAttributes $scim_attributes;

    public function __construct(
        string $connection_id,
        ?string $external_id,
        string $registration_id,
        ?SCIMAttributes $scim_attributes
    ) {
        $this->connection_id = $connection_id;
        $this->external_id = $external_id;
        $this->registration_id = $registration_id;
        $this->scim_attributes = $scim_attributes;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection_id'],
            $data['external_id'] ?? null,
            $data['registration_id'],
            $data['scim_attributes'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection_id' => $this->connection_id,
            'external_id' => $this->external_id,
            'registration_id' => $this->registration_id,
            'scim_attributes' => $this->scim_attributes,
        ];
    }
}

class GetOrganizationConnectedAppsResponse
{
    public ?array $connected_apps;

    public function __construct(
        ?array $connected_apps
    ) {
        $this->connected_apps = $connected_apps;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connected_apps'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connected_apps' => $this->connected_apps,
        ];
    }
}

class GithubInformationResponse
{
    public string $provider_type;
    public ?array $registrations;

    public function __construct(
        string $provider_type,
        ?array $registrations
    ) {
        $this->provider_type = $provider_type;
        $this->registrations = $registrations;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['registrations'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'registrations' => $this->registrations,
        ];
    }
}

class MemberStartEmailUpdateResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class GetMemberConnectedAppsResponse
{
    public ?array $connected_apps;

    public function __construct(
        ?array $connected_apps
    ) {
        $this->connected_apps = $connected_apps;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connected_apps'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connected_apps' => $this->connected_apps,
        ];
    }
}

class OAuthRegistration
{
    public string $provider_type;
    public string $provider_subject;
    public ?string $profile_picture_url;
    public ?string $locale;
    public string $member_oauth_registration_id;

    public function __construct(
        string $provider_type,
        string $provider_subject,
        ?string $profile_picture_url,
        ?string $locale,
        string $member_oauth_registration_id
    ) {
        $this->provider_type = $provider_type;
        $this->provider_subject = $provider_subject;
        $this->profile_picture_url = $profile_picture_url;
        $this->locale = $locale;
        $this->member_oauth_registration_id = $member_oauth_registration_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['provider_subject'],
            $data['profile_picture_url'] ?? null,
            $data['locale'] ?? null,
            $data['member_oauth_registration_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'provider_subject' => $this->provider_subject,
            'profile_picture_url' => $this->profile_picture_url,
            'locale' => $this->locale,
            'member_oauth_registration_id' => $this->member_oauth_registration_id,
        ];
    }
}

class GoogleInformationResponse
{
    public string $provider_type;
    public string $provider_subject;
    public ?string $access_token;
    public ?int $access_token_expires_in;
    public string $id_token;
    public array $scopes;
    public ?string $refresh_token;

    public function __construct(
        string $provider_type,
        string $provider_subject,
        ?string $access_token,
        ?int $access_token_expires_in,
        string $id_token,
        array $scopes,
        ?string $refresh_token
    ) {
        $this->provider_type = $provider_type;
        $this->provider_subject = $provider_subject;
        $this->access_token = $access_token;
        $this->access_token_expires_in = $access_token_expires_in;
        $this->id_token = $id_token;
        $this->scopes = $scopes;
        $this->refresh_token = $refresh_token;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['provider_subject'],
            $data['access_token'] ?? null,
            $data['access_token_expires_in'] ?? null,
            $data['id_token'],
            $data['scopes'],
            $data['refresh_token'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'provider_subject' => $this->provider_subject,
            'access_token' => $this->access_token,
            'access_token_expires_in' => $this->access_token_expires_in,
            'id_token' => $this->id_token,
            'scopes' => $this->scopes,
            'refresh_token' => $this->refresh_token,
        ];
    }
}

class ActiveSSOConnection
{
    public string $connection_id;
    public string $display_name;
    public string $identity_provider;

    public function __construct(
        string $connection_id,
        string $display_name,
        string $identity_provider
    ) {
        $this->connection_id = $connection_id;
        $this->display_name = $display_name;
        $this->identity_provider = $identity_provider;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection_id'],
            $data['display_name'],
            $data['identity_provider']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection_id' => $this->connection_id,
            'display_name' => $this->display_name,
            'identity_provider' => $this->identity_provider,
        ];
    }
}

class CreateResponse
{
    public Organization $organization;

    public function __construct(
        Organization $organization
    ) {
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization' => $this->organization,
        ];
    }
}

class MemberCreateResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class UpdateRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class OrgDeleteRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberCreateRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberUpdateRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberDeleteRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberReactivateRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberDeleteMFAPhoneNumberRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberDeleteMFATOTPRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberSearchExternalRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberDeletePasswordRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberUnlinkRetiredEmailRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class MemberStartEmailUpdateRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class GetMemberConnectedAppsRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class RevokeConnectedAppRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class GetOrganizationConnectedAppsRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class GetOrganizationConnectedAppRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

