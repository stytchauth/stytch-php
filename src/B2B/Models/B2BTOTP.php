<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models;

class B2BTOTPMigrateResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;
    public string $totp_registration_id;
    public array $recovery_codes;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization,
        string $totp_registration_id,
        array $recovery_codes
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
        $this->totp_registration_id = $totp_registration_id;
        $this->recovery_codes = $recovery_codes;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization'],
            $data['totp_registration_id'],
            $data['recovery_codes']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
            'totp_registration_id' => $this->totp_registration_id,
            'recovery_codes' => $this->recovery_codes,
        ];
    }
}

class B2BTOTPCreateResponse
{
    public string $member_id;
    public string $totp_registration_id;
    public string $secret;
    public string $qr_code;
    public array $recovery_codes;
    public Member $member;
    public Organization $organization;

    public function __construct(
        string $member_id,
        string $totp_registration_id,
        string $secret,
        string $qr_code,
        array $recovery_codes,
        Member $member,
        Organization $organization
    ) {
        $this->member_id = $member_id;
        $this->totp_registration_id = $totp_registration_id;
        $this->secret = $secret;
        $this->qr_code = $qr_code;
        $this->recovery_codes = $recovery_codes;
        $this->member = $member;
        $this->organization = $organization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['totp_registration_id'],
            $data['secret'],
            $data['qr_code'],
            $data['recovery_codes'],
            $data['member'],
            $data['organization']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'totp_registration_id' => $this->totp_registration_id,
            'secret' => $this->secret,
            'qr_code' => $this->qr_code,
            'recovery_codes' => $this->recovery_codes,
            'member' => $this->member,
            'organization' => $this->organization,
        ];
    }
}

class B2BTOTPAuthenticateResponse
{
    public string $member_id;
    public Member $member;
    public Organization $organization;
    public string $session_token;
    public string $session_jwt;
    public ?MemberSession $member_session;
    public ?DeviceInfo $member_device;

    public function __construct(
        string $member_id,
        Member $member,
        Organization $organization,
        string $session_token,
        string $session_jwt,
        ?MemberSession $member_session,
        ?DeviceInfo $member_device
    ) {
        $this->member_id = $member_id;
        $this->member = $member;
        $this->organization = $organization;
        $this->session_token = $session_token;
        $this->session_jwt = $session_jwt;
        $this->member_session = $member_session;
        $this->member_device = $member_device;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['member_id'],
            $data['member'],
            $data['organization'],
            $data['session_token'],
            $data['session_jwt'],
            $data['member_session'] ?? null,
            $data['member_device'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'member_id' => $this->member_id,
            'member' => $this->member,
            'organization' => $this->organization,
            'session_token' => $this->session_token,
            'session_jwt' => $this->session_jwt,
            'member_session' => $this->member_session,
            'member_device' => $this->member_device,
        ];
    }
}

