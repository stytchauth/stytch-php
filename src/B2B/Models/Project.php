<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models;

enum ProjectMetricMetricType: string
{
}

class ProjectMetric
{
    public string $metric_type;
    public int $count;

    public function __construct(
        string $metric_type,
        int $count
    ) {
        $this->metric_type = $metric_type;
        $this->count = $count;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['metric_type'],
            $data['count']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'metric_type' => $this->metric_type,
            'count' => $this->count,
        ];
    }
}

class MetricsResponse
{
    public string $project_id;
    public array $metrics;

    public function __construct(
        string $project_id,
        array $metrics
    ) {
        $this->project_id = $project_id;
        $this->metrics = $metrics;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['project_id'],
            $data['metrics']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'project_id' => $this->project_id,
            'metrics' => $this->metrics,
        ];
    }
}

