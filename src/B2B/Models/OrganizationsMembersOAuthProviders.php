<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models;

class GithubResponse
{
    public string $provider_type;
    public array $registrations;

    public function __construct(
        string $provider_type,
        array $registrations
    ) {
        $this->provider_type = $provider_type;
        $this->registrations = $registrations;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['registrations']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'registrations' => $this->registrations,
        ];
    }
}

class GoogleResponse
{
    public string $provider_type;
    public string $provider_subject;
    public string $id_token;
    public array $scopes;
    public ?string $access_token;
    public ?int $access_token_expires_in;
    public ?string $refresh_token;

    public function __construct(
        string $provider_type,
        string $provider_subject,
        string $id_token,
        array $scopes,
        ?string $access_token,
        ?int $access_token_expires_in,
        ?string $refresh_token
    ) {
        $this->provider_type = $provider_type;
        $this->provider_subject = $provider_subject;
        $this->id_token = $id_token;
        $this->scopes = $scopes;
        $this->access_token = $access_token;
        $this->access_token_expires_in = $access_token_expires_in;
        $this->refresh_token = $refresh_token;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['provider_subject'],
            $data['id_token'],
            $data['scopes'],
            $data['access_token'] ?? null,
            $data['access_token_expires_in'] ?? null,
            $data['refresh_token'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'provider_subject' => $this->provider_subject,
            'id_token' => $this->id_token,
            'scopes' => $this->scopes,
            'access_token' => $this->access_token,
            'access_token_expires_in' => $this->access_token_expires_in,
            'refresh_token' => $this->refresh_token,
        ];
    }
}

class HubspotResponse
{
    public string $provider_type;
    public array $registrations;

    public function __construct(
        string $provider_type,
        array $registrations
    ) {
        $this->provider_type = $provider_type;
        $this->registrations = $registrations;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['registrations']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'registrations' => $this->registrations,
        ];
    }
}

class MicrosoftResponse
{
    public string $provider_type;
    public string $provider_subject;
    public string $access_token;
    public int $access_token_expires_in;
    public string $id_token;
    public array $scopes;
    public ?string $refresh_token;

    public function __construct(
        string $provider_type,
        string $provider_subject,
        string $access_token,
        int $access_token_expires_in,
        string $id_token,
        array $scopes,
        ?string $refresh_token
    ) {
        $this->provider_type = $provider_type;
        $this->provider_subject = $provider_subject;
        $this->access_token = $access_token;
        $this->access_token_expires_in = $access_token_expires_in;
        $this->id_token = $id_token;
        $this->scopes = $scopes;
        $this->refresh_token = $refresh_token;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['provider_subject'],
            $data['access_token'],
            $data['access_token_expires_in'],
            $data['id_token'],
            $data['scopes'],
            $data['refresh_token'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'provider_subject' => $this->provider_subject,
            'access_token' => $this->access_token,
            'access_token_expires_in' => $this->access_token_expires_in,
            'id_token' => $this->id_token,
            'scopes' => $this->scopes,
            'refresh_token' => $this->refresh_token,
        ];
    }
}

class SlackResponse
{
    public string $provider_type;
    public array $registrations;

    public function __construct(
        string $provider_type,
        array $registrations
    ) {
        $this->provider_type = $provider_type;
        $this->registrations = $registrations;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['provider_type'],
            $data['registrations']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'provider_type' => $this->provider_type,
            'registrations' => $this->registrations,
        ];
    }
}

