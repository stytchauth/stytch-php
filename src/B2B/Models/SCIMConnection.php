<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models;

enum CreateRequestIdentityProvider: string
{
}

enum UpdateRequestIdentityProvider: string
{
}

class CreateResponse
{
    public ?SCIMConnectionWithToken $connection;

    public function __construct(
        ?SCIMConnectionWithToken $connection
    ) {
        $this->connection = $connection;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection' => $this->connection,
        ];
    }
}

class DeleteResponse
{
    public string $connection_id;

    public function __construct(
        string $connection_id
    ) {
        $this->connection_id = $connection_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection_id' => $this->connection_id,
        ];
    }
}

class GetGroupsResponse
{
    public array $scim_groups;
    public ?string $next_cursor;

    public function __construct(
        array $scim_groups,
        ?string $next_cursor
    ) {
        $this->scim_groups = $scim_groups;
        $this->next_cursor = $next_cursor;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['scim_groups'],
            $data['next_cursor'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'scim_groups' => $this->scim_groups,
            'next_cursor' => $this->next_cursor,
        ];
    }
}

class GetResponse
{
    public ?SCIMConnection $connection;

    public function __construct(
        ?SCIMConnection $connection
    ) {
        $this->connection = $connection;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection' => $this->connection,
        ];
    }
}

class RotateCancelResponse
{
    public ?SCIMConnection $connection;

    public function __construct(
        ?SCIMConnection $connection
    ) {
        $this->connection = $connection;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection' => $this->connection,
        ];
    }
}

class RotateCompleteResponse
{
    public ?SCIMConnection $connection;

    public function __construct(
        ?SCIMConnection $connection
    ) {
        $this->connection = $connection;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection' => $this->connection,
        ];
    }
}

class RotateStartResponse
{
    public ?SCIMConnectionWithNextToken $connection;

    public function __construct(
        ?SCIMConnectionWithNextToken $connection
    ) {
        $this->connection = $connection;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection' => $this->connection,
        ];
    }
}

class UpdateResponse
{
    public ?SCIMConnection $connection;

    public function __construct(
        ?SCIMConnection $connection
    ) {
        $this->connection = $connection;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['connection'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'connection' => $this->connection,
        ];
    }
}

class UpdateRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class DeleteRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class RotateStartRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class RotateCompleteRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class RotateCancelRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class GetGroupsRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class CreateRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

class GetRequestOptions
{
    public ?mixed $authorization;

    public function __construct(
        ?mixed $authorization
    ) {
        $this->authorization = $authorization;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorization'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorization' => $this->authorization,
        ];
    }
}

