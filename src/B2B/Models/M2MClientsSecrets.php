<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models;

class RotateCancelResponse
{
    public M2MClient $m2m_client;

    public function __construct(
        M2MClient $m2m_client
    ) {
        $this->m2m_client = $m2m_client;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['m2m_client']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'm2m_client' => $this->m2m_client,
        ];
    }
}

class RotateResponse
{
    public M2MClient $m2m_client;

    public function __construct(
        M2MClient $m2m_client
    ) {
        $this->m2m_client = $m2m_client;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['m2m_client']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'm2m_client' => $this->m2m_client,
        ];
    }
}

class RotateStartResponse
{
    public M2MClientWithNextClientSecret $m2m_client;

    public function __construct(
        M2MClientWithNextClientSecret $m2m_client
    ) {
        $this->m2m_client = $m2m_client;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['m2m_client']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'm2m_client' => $this->m2m_client,
        ];
    }
}

