<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models\SCIM;

class SCIMAttributes
{
    public string $userName;
    public string $id;
    public string $externalId;
    public bool $active;
    public array $groups;
    public string $displayName;
    public string $nickName;
    public string $profileURL;
    public string $userType;
    public string $title;
    public string $preferredLanguage;
    public string $locale;
    public string $timezone;
    public array $emails;
    public array $phoneNumbers;
    public array $addresses;
    public array $ims;
    public array $photos;
    public array $entitlements;
    public array $roles;
    public array $x509Certificates;
    public ?Name $name = null;
    public ?EnterpriseExtension $enterpriseExtension = null;

    public function __construct(
        string $userName,
        string $id,
        string $externalId,
        bool $active,
        array $groups,
        string $displayName,
        string $nickName,
        string $profileURL,
        string $userType,
        string $title,
        string $preferredLanguage,
        string $locale,
        string $timezone,
        array $emails,
        array $phoneNumbers,
        array $addresses,
        array $ims,
        array $photos,
        array $entitlements,
        array $roles,
        array $x509Certificates,
        ?Name $name = null,
        ?EnterpriseExtension $enterpriseExtension = null
    ) {
        $this->userName = $userName;
        $this->id = $id;
        $this->externalId = $externalId;
        $this->active = $active;
        $this->groups = $groups;
        $this->displayName = $displayName;
        $this->nickName = $nickName;
        $this->profileURL = $profileURL;
        $this->userType = $userType;
        $this->title = $title;
        $this->preferredLanguage = $preferredLanguage;
        $this->locale = $locale;
        $this->timezone = $timezone;
        $this->emails = $emails;
        $this->phoneNumbers = $phoneNumbers;
        $this->addresses = $addresses;
        $this->ims = $ims;
        $this->photos = $photos;
        $this->entitlements = $entitlements;
        $this->roles = $roles;
        $this->x509Certificates = $x509Certificates;
        $this->name = $name;
        $this->enterpriseExtension = $enterpriseExtension;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_name'],
            $data['id'],
            $data['external_id'],
            $data['active'],
            isset($data['groups']) ? array_map(fn ($item) => Group::fromArray($item), $data['groups']) : [],
            $data['display_name'],
            $data['nick_name'],
            $data['profile_url'],
            $data['user_type'],
            $data['title'],
            $data['preferred_language'],
            $data['locale'],
            $data['timezone'],
            isset($data['emails']) ? array_map(fn ($item) => Email::fromArray($item), $data['emails']) : [],
            isset($data['phone_numbers']) ? array_map(fn ($item) => PhoneNumber::fromArray($item), $data['phone_numbers']) : [],
            isset($data['addresses']) ? array_map(fn ($item) => Address::fromArray($item), $data['addresses']) : [],
            isset($data['ims']) ? array_map(fn ($item) => IMs::fromArray($item), $data['ims']) : [],
            isset($data['photos']) ? array_map(fn ($item) => Photo::fromArray($item), $data['photos']) : [],
            isset($data['entitlements']) ? array_map(fn ($item) => Entitlement::fromArray($item), $data['entitlements']) : [],
            isset($data['roles']) ? array_map(fn ($item) => Role::fromArray($item), $data['roles']) : [],
            isset($data['x509certificates']) ? array_map(fn ($item) => X509Certificate::fromArray($item), $data['x509certificates']) : [],
            $data['name'] !== null ? Name::fromArray($data['name']) : null,
            $data['enterprise_extension'] !== null ? EnterpriseExtension::fromArray($data['enterprise_extension']) : null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_name' => $this->userName,
            'id' => $this->id,
            'external_id' => $this->externalId,
            'active' => $this->active,
            'groups' => $this->groups,
            'display_name' => $this->displayName,
            'nick_name' => $this->nickName,
            'profile_url' => $this->profileURL,
            'user_type' => $this->userType,
            'title' => $this->title,
            'preferred_language' => $this->preferredLanguage,
            'locale' => $this->locale,
            'timezone' => $this->timezone,
            'emails' => $this->emails,
            'phone_numbers' => $this->phoneNumbers,
            'addresses' => $this->addresses,
            'ims' => $this->ims,
            'photos' => $this->photos,
            'entitlements' => $this->entitlements,
            'roles' => $this->roles,
            'x509certificates' => $this->x509Certificates,
            'name' => $this->name,
            'enterprise_extension' => $this->enterpriseExtension,
        ];
    }
}
