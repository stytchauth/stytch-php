<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Models\SCIM;

class SCIMConnection
{
    public string $organizationId;
    public string $connectionId;
    public string $status;
    public string $displayName;
    public string $identityProvider;
    public string $baseURL;
    public string $bearerTokenLastFour;
    public array $scimGroupImplicitRoleAssignments;
    public string $nextBearerTokenLastFour;
    public ?string $bearerTokenExpiresAt = null;
    public ?string $nextBearerTokenExpiresAt = null;

    public function __construct(
        string $organizationId,
        string $connectionId,
        string $status,
        string $displayName,
        string $identityProvider,
        string $baseURL,
        string $bearerTokenLastFour,
        array $scimGroupImplicitRoleAssignments,
        string $nextBearerTokenLastFour,
        ?string $bearerTokenExpiresAt = null,
        ?string $nextBearerTokenExpiresAt = null
    ) {
        $this->organizationId = $organizationId;
        $this->connectionId = $connectionId;
        $this->status = $status;
        $this->displayName = $displayName;
        $this->identityProvider = $identityProvider;
        $this->baseURL = $baseURL;
        $this->bearerTokenLastFour = $bearerTokenLastFour;
        $this->scimGroupImplicitRoleAssignments = $scimGroupImplicitRoleAssignments;
        $this->nextBearerTokenLastFour = $nextBearerTokenLastFour;
        $this->bearerTokenExpiresAt = $bearerTokenExpiresAt;
        $this->nextBearerTokenExpiresAt = $nextBearerTokenExpiresAt;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['organization_id'],
            $data['connection_id'],
            $data['status'],
            $data['display_name'],
            $data['identity_provider'],
            $data['base_url'],
            $data['bearer_token_last_four'],
            isset($data['scim_group_implicit_role_assignments']) ? array_map(fn ($item) => SCIMGroupImplicitRoleAssignments::fromArray($item), $data['scim_group_implicit_role_assignments']) : [],
            $data['next_bearer_token_last_four'],
            $data['bearer_token_expires_at'] ?? null,
            $data['next_bearer_token_expires_at'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'organization_id' => $this->organizationId,
            'connection_id' => $this->connectionId,
            'status' => $this->status,
            'display_name' => $this->displayName,
            'identity_provider' => $this->identityProvider,
            'base_url' => $this->baseURL,
            'bearer_token_last_four' => $this->bearerTokenLastFour,
            'scim_group_implicit_role_assignments' => $this->scimGroupImplicitRoleAssignments,
            'next_bearer_token_last_four' => $this->nextBearerTokenLastFour,
            'bearer_token_expires_at' => $this->bearerTokenExpiresAt,
            'next_bearer_token_expires_at' => $this->nextBearerTokenExpiresAt,
        ];
    }
}
