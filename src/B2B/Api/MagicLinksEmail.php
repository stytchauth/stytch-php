<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Api;

use Stytch\Core\Client;

class MagicLinksEmail
{
    private Client $client;

    public MagicLinksEmailDiscovery $discovery;

    public function __construct(Client $client)
    {
        $this->client = $client;

        $this->discovery = new MagicLinksEmailDiscovery($this->client);
    }

/**
    * Send either a login or signup magic link to a Member. A new, pending, or invited Member will receive a
    * signup Email Magic Link. Members will have a `pending` status until they successfully authenticate. An
    * active Member will receive a login Email Magic Link.
    * 
    * The magic link is valid for 60 minutes.

     * @param \Stytch\B2B\Models\MagicLinks\Email\LoginOrSignupRequest|array $request
     * @return \Stytch\B2B\Models\MagicLinks\Email\LoginOrSignupResponse
     */
    public function loginOrSignup(
        \Stytch\B2B\Models\MagicLinks\Email\LoginOrSignupRequest|array $request,
    ): \Stytch\B2B\Models\MagicLinks\Email\LoginOrSignupResponse {
        $data = is_array($request) ? $request : $request->toArray();
        $response = $this->client->post('/v1/b2b/magic_links/email/login_or_signup', $data);
        return \Stytch\B2B\Models\MagicLinks\Email\LoginOrSignupResponse::fromArray($response);
    }

    /**
    * Send either a login or signup magic link to a Member. A new, pending, or invited Member will receive a
    * signup Email Magic Link. Members will have a `pending` status until they successfully authenticate. An
    * active Member will receive a login Email Magic Link.
    * 
    * The magic link is valid for 60 minutes.

     * @param \Stytch\B2B\Models\MagicLinks\Email\LoginOrSignupRequest|array $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function loginOrSignupAsync(
        \Stytch\B2B\Models\MagicLinks\Email\LoginOrSignupRequest|array $request,
    ): \GuzzleHttp\Promise\PromiseInterface {
        $data = is_array($request) ? $request : $request->toArray();
        $promise = $this->client->postAsync('/v1/b2b/magic_links/email/login_or_signup', $data);
        return $promise->then(function ($response) {
            return \Stytch\B2B\Models\MagicLinks\Email\LoginOrSignupResponse::fromArray($response);
        });
    }

/**
    * Send an invite email to a new Member to join an Organization. The Member will be created with an
    * `invited` status until they successfully authenticate. Sending invites to `pending` Members will update
    * their status to `invited`. Sending invites to already `active` Members will return an error.
    * 
    * The magic link invite will be valid for 1 week.
    * 
    * ## Revoke an invite
    * 
    * To revoke an existing invite, use the [Delete Member](https://stytch.com/docs/b2b/api/delete-member)
    * endpoint. This will both delete the invited Member from the target Organization and revoke all existing
    * invite emails.

     * @param \Stytch\B2B\Models\MagicLinks\Email\InviteRequest|array $request
     * @return \Stytch\B2B\Models\MagicLinks\Email\InviteResponse
     */
    public function invite(
        \Stytch\B2B\Models\MagicLinks\Email\InviteRequest|array $request,
        \Stytch\B2B\Models\MagicLinks\Email\InviteRequestOptions|array $options = [],
    ): \Stytch\B2B\Models\MagicLinks\Email\InviteResponse {
        $data = is_array($request) ? $request : $request->toArray();
        $opts = is_array($options) ? $options : $options->toArray();
        $response = $this->client->post('/v1/b2b/magic_links/email/invite', $data, $opts);
        return \Stytch\B2B\Models\MagicLinks\Email\InviteResponse::fromArray($response);
    }

    /**
    * Send an invite email to a new Member to join an Organization. The Member will be created with an
    * `invited` status until they successfully authenticate. Sending invites to `pending` Members will update
    * their status to `invited`. Sending invites to already `active` Members will return an error.
    * 
    * The magic link invite will be valid for 1 week.
    * 
    * ## Revoke an invite
    * 
    * To revoke an existing invite, use the [Delete Member](https://stytch.com/docs/b2b/api/delete-member)
    * endpoint. This will both delete the invited Member from the target Organization and revoke all existing
    * invite emails.

     * @param \Stytch\B2B\Models\MagicLinks\Email\InviteRequest|array $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function inviteAsync(
        \Stytch\B2B\Models\MagicLinks\Email\InviteRequest|array $request,
        \Stytch\B2B\Models\MagicLinks\Email\InviteRequestOptions|array $options = [],
    ): \GuzzleHttp\Promise\PromiseInterface {
        $data = is_array($request) ? $request : $request->toArray();
        $opts = is_array($options) ? $options : $options->toArray();
        $promise = $this->client->postAsync('/v1/b2b/magic_links/email/invite', $data, $opts);
        return $promise->then(function ($response) {
            return \Stytch\B2B\Models\MagicLinks\Email\InviteResponse::fromArray($response);
        });
    }

}
