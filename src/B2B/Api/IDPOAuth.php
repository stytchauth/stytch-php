<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Api;

use Stytch\Core\Client;

class IDPOAuth
{
    private Client $client;


    public function __construct(Client $client)
    {
        $this->client = $client;

    }

    /**
         * @param \Stytch\B2B\Models\IDP\OAuth\AuthorizeStartRequest|array $request
         * @return \Stytch\B2B\Models\IDP\OAuth\AuthorizeStartResponse
         */
    public function authorizeStart(
        \Stytch\B2B\Models\IDP\OAuth\AuthorizeStartRequest|array $request,
    ): \Stytch\B2B\Models\IDP\OAuth\AuthorizeStartResponse {
        $data = is_array($request) ? $request : $request->toArray();
        $response = $this->client->post('/v1/b2b/idp/oauth/authorize/start', $data);
        return \Stytch\B2B\Models\IDP\OAuth\AuthorizeStartResponse::fromArray($response);
    }

    /**
     * @param \Stytch\B2B\Models\IDP\OAuth\AuthorizeStartRequest|array $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function authorizeStartAsync(
        \Stytch\B2B\Models\IDP\OAuth\AuthorizeStartRequest|array $request,
    ): \GuzzleHttp\Promise\PromiseInterface {
        $data = is_array($request) ? $request : $request->toArray();
        $promise = $this->client->postAsync('/v1/b2b/idp/oauth/authorize/start', $data);
        return $promise->then(function ($response) {
            return \Stytch\B2B\Models\IDP\OAuth\AuthorizeStartResponse::fromArray($response);
        });
    }

    /**
         * @param \Stytch\B2B\Models\IDP\OAuth\AuthorizeRequest|array $request
         * @return \Stytch\B2B\Models\IDP\OAuth\AuthorizeResponse
         */
    public function authorize(
        \Stytch\B2B\Models\IDP\OAuth\AuthorizeRequest|array $request,
    ): \Stytch\B2B\Models\IDP\OAuth\AuthorizeResponse {
        $data = is_array($request) ? $request : $request->toArray();
        $response = $this->client->post('/v1/b2b/idp/oauth/authorize', $data);
        return \Stytch\B2B\Models\IDP\OAuth\AuthorizeResponse::fromArray($response);
    }

    /**
     * @param \Stytch\B2B\Models\IDP\OAuth\AuthorizeRequest|array $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function authorizeAsync(
        \Stytch\B2B\Models\IDP\OAuth\AuthorizeRequest|array $request,
    ): \GuzzleHttp\Promise\PromiseInterface {
        $data = is_array($request) ? $request : $request->toArray();
        $promise = $this->client->postAsync('/v1/b2b/idp/oauth/authorize', $data);
        return $promise->then(function ($response) {
            return \Stytch\B2B\Models\IDP\OAuth\AuthorizeResponse::fromArray($response);
        });
    }

}
