<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Api;

use Stytch\Core\Client;

class SSOOIDC
{
    private Client $client;


    public function __construct(Client $client)
    {
        $this->client = $client;

    }

    /**
        * Create a new OIDC Connection.

         * @param \Stytch\B2B\Models\SSO\OIDC\CreateConnectionRequest|array $request
         * @return \Stytch\B2B\Models\SSO\OIDC\CreateConnectionResponse
         */
    public function createConnection(
        \Stytch\B2B\Models\SSO\OIDC\CreateConnectionRequest|array $request,
        \Stytch\B2B\Models\SSO\OIDC\CreateConnectionRequestOptions|array $options = [],
    ): \Stytch\B2B\Models\SSO\OIDC\CreateConnectionResponse {
        $data = is_array($request) ? $request : $request->toArray();
        $opts = is_array($options) ? $options : $options->toArray();
        $response = $this->client->post('/v1/b2b/sso/oidc/{organization_id}', $data, $opts);
        return \Stytch\B2B\Models\SSO\OIDC\CreateConnectionResponse::fromArray($response);
    }

    /**
        * Updates an existing OIDC connection.
        *
        * When the value of `issuer` changes, Stytch will attempt to retrieve the
        * [OpenID Provider Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)
        * document found at `$/.well-known/openid-configuration`.
        * If the metadata document can be retrieved successfully, Stytch will use it to infer the values of
        * `authorization_url`, `token_url`, `jwks_url`, and `userinfo_url`.
        * The `client_id` and `client_secret` values cannot be inferred from the metadata document, and *must* be
        * passed in explicitly.
        *
        * If the metadata document cannot be retrieved, Stytch will still update the connection using values from
        * the request body.
        *
        * If the metadata document can be retrieved, and values are passed in the request body, the explicit
        * values passed in from the request body will take precedence over the values inferred from the metadata
        * document.
        *
        * Note that a newly created connection will not become active until all of the following fields are
        * provided:
        * * `issuer`
        * * `client_id`
        * * `client_secret`
        * * `authorization_url`
        * * `token_url`
        * * `userinfo_url`
        * * `jwks_url`

         * @param \Stytch\B2B\Models\SSO\OIDC\UpdateConnectionRequest|array $request
         * @return \Stytch\B2B\Models\SSO\OIDC\UpdateConnectionResponse
         */
    public function updateConnection(
        \Stytch\B2B\Models\SSO\OIDC\UpdateConnectionRequest|array $request,
        \Stytch\B2B\Models\SSO\OIDC\UpdateConnectionRequestOptions|array $options = [],
    ): \Stytch\B2B\Models\SSO\OIDC\UpdateConnectionResponse {
        $data = is_array($request) ? $request : $request->toArray();
        $opts = is_array($options) ? $options : $options->toArray();
        $response = $this->client->put('/v1/b2b/sso/oidc/{organization_id}/connections/{connection_id}', $data, $opts);
        return \Stytch\B2B\Models\SSO\OIDC\UpdateConnectionResponse::fromArray($response);
    }

}
