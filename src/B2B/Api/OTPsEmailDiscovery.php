<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\B2B\Api;

use Stytch\Core\Client;

class OTPsEmailDiscovery
{
    private Client $client;


    public function __construct(Client $client)
    {
        $this->client = $client;

    }

    /**
        * Send a discovery OTP to an email address. The OTP is valid for 10 minutes. Only the most recently sent
        * OTP is valid: when an OTP is sent, all OTPs previously sent to the same email address are invalidated,
        * even if unused or unexpired.

         * @param \Stytch\B2B\Models\OTPs\Email\Discovery\SendRequest|array $request
         * @return \Stytch\B2B\Models\OTPs\Email\Discovery\SendResponse
         */
    public function send(\Stytch\B2B\Models\OTPs\Email\Discovery\SendRequest|array $request): \Stytch\B2B\Models\OTPs\Email\Discovery\SendResponse
    {
        $data = is_array($request) ? $request : $request->toArray();
        $response = $this->client->post('/v1/b2b/otps/email/discovery/send', $data);
        return \Stytch\B2B\Models\OTPs\Email\Discovery\SendResponse::fromArray($response);
    }

    /**
        * Authenticates the OTP and returns an intermediate session token. Intermediate session tokens can be used
        * for various Discovery login flows and are valid for 10 minutes.

         * @param \Stytch\B2B\Models\OTPs\Email\Discovery\AuthenticateRequest|array $request
         * @return \Stytch\B2B\Models\OTPs\Email\Discovery\AuthenticateResponse
         */
    public function authenticate(\Stytch\B2B\Models\OTPs\Email\Discovery\AuthenticateRequest|array $request): \Stytch\B2B\Models\OTPs\Email\Discovery\AuthenticateResponse
    {
        $data = is_array($request) ? $request : $request->toArray();
        $response = $this->client->post('/v1/b2b/otps/email/discovery/authenticate', $data);
        return \Stytch\B2B\Models\OTPs\Email\Discovery\AuthenticateResponse::fromArray($response);
    }

}
