<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\M2M\Clients;


final class CreateRequest
{
    /** An array of scopes assigned to the client. */
    public array $scopes;
    /**
    * If provided, the ID of the client to create. If not provided, Stytch will generate this value for you.
    * The `client_id` must be unique within your project.
     */
    public ?string $clientId = null;
    /**
    * If provided, the stored secret of the client to create. If not provided, Stytch will generate this value
    * for you. If provided, the `client_secret` must be at least 8 characters long and pass entropy
    * requirements.
     */
    public ?string $clientSecret = null;
    /** A human-readable name for the client. */
    public ?string $clientName = null;
    /** A human-readable description for the client. */
    public ?string $clientDescription = null;
    /**
    * The `trusted_metadata` field contains an arbitrary JSON object of application-specific data. See the
    * [Metadata](https://stytch.com/docs/api/metadata) reference for complete field behavior details.
     */
    public ?array $trustedMetadata = null;

    public function __construct(
        array $scopes,
        ?string $clientId = null,
        ?string $clientSecret = null,
        ?string $clientName = null,
        ?string $clientDescription = null,
        ?array $trustedMetadata = null
    ) {
        $this->scopes = $scopes;
        $this->clientId = $clientId;
        $this->clientSecret = $clientSecret;
        $this->clientName = $clientName;
        $this->clientDescription = $clientDescription;
        $this->trustedMetadata = $trustedMetadata;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['scopes'],
            $data['client_id'] ?? null,
            $data['client_secret'] ?? null,
            $data['client_name'] ?? null,
            $data['client_description'] ?? null,
            $data['trusted_metadata'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'scopes' => $this->scopes,
            'client_id' => $this->clientId,
            'client_secret' => $this->clientSecret,
            'client_name' => $this->clientName,
            'client_description' => $this->clientDescription,
            'trusted_metadata' => $this->trustedMetadata,
        ];
    }
}