<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\M2M\Clients;

class SearchResponse
{
    /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
     */
    public string $requestId;
    /** An array of M2M Clients that match your search query. */
    public array $m2mClients;
    /**
    * The search `results_metadata` object contains metadata relevant to your specific query like total and
    * `next_cursor`.
     */
    public \Stytch\Consumer\Models\M2M\ResultsMetadata $resultsMetadata;
    /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
     */
    public int $statusCode;

    public function __construct(
        string $requestId,
        array $m2mClients,
        \Stytch\Consumer\Models\M2M\ResultsMetadata $resultsMetadata,
        int $statusCode
    ) {
        $this->requestId = $requestId;
        $this->m2mClients = $m2mClients;
        $this->resultsMetadata = $resultsMetadata;
        $this->statusCode = $statusCode;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['request_id'],
            isset($data['m2m_clients']) ? array_map(fn ($item) => \Stytch\Consumer\Models\M2M\M2MClient::fromArray($item), $data['m2m_clients']) : [],
            \Stytch\Consumer\Models\M2M\ResultsMetadata::fromArray($data['results_metadata']),
            $data['status_code']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'request_id' => $this->requestId,
            'm2m_clients' => $this->m2mClients,
            'results_metadata' => $this->resultsMetadata,
            'status_code' => $this->statusCode,
        ];
    }
}
