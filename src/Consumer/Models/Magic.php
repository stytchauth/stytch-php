<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models;

class SendMagicByEmailResponse
{
    public string $user_id;
    public string $email_id;

    public function __construct(
        string $user_id,
        string $email_id
    ) {
        $this->user_id = $user_id;
        $this->email_id = $email_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_id'],
            $data['email_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_id' => $this->user_id,
            'email_id' => $this->email_id,
        ];
    }
}

class InviteByEmailResponse
{
    public string $user_id;
    public string $email_id;

    public function __construct(
        string $user_id,
        string $email_id
    ) {
        $this->user_id = $user_id;
        $this->email_id = $email_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_id'],
            $data['email_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_id' => $this->user_id,
            'email_id' => $this->email_id,
        ];
    }
}

class Options
{
    public bool $ip_match_required;
    public bool $user_agent_match_required;

    public function __construct(
        bool $ip_match_required,
        bool $user_agent_match_required
    ) {
        $this->ip_match_required = $ip_match_required;
        $this->user_agent_match_required = $user_agent_match_required;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['ip_match_required'],
            $data['user_agent_match_required']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'ip_match_required' => $this->ip_match_required,
            'user_agent_match_required' => $this->user_agent_match_required,
        ];
    }
}

class RevokeInviteByEmailResponse
{

    public function __construct(
    ) {
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
        ];
    }
}

class LoginOrCreateUserResponse
{
    public string $user_id;
    public string $email_id;
    public bool $user_created;

    public function __construct(
        string $user_id,
        string $email_id,
        bool $user_created
    ) {
        $this->user_id = $user_id;
        $this->email_id = $email_id;
        $this->user_created = $user_created;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_id'],
            $data['email_id'],
            $data['user_created']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_id' => $this->user_id,
            'email_id' => $this->email_id,
            'user_created' => $this->user_created,
        ];
    }
}

class AuthenticateMagicResponse
{
    public string $user_id;
    public string $method_id;
    public string $session_token;
    public ?Session $session;
    public string $session_jwt;
    public User $user;
    public bool $reset_sessions;
    public ?DeviceInfo $user_device;

    public function __construct(
        string $user_id,
        string $method_id,
        string $session_token,
        ?Session $session,
        string $session_jwt,
        User $user,
        bool $reset_sessions,
        ?DeviceInfo $user_device
    ) {
        $this->user_id = $user_id;
        $this->method_id = $method_id;
        $this->session_token = $session_token;
        $this->session = $session;
        $this->session_jwt = $session_jwt;
        $this->user = $user;
        $this->reset_sessions = $reset_sessions;
        $this->user_device = $user_device;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_id'],
            $data['method_id'],
            $data['session_token'],
            $data['session'] ?? null,
            $data['session_jwt'],
            $data['user'],
            $data['reset_sessions'],
            $data['user_device'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_id' => $this->user_id,
            'method_id' => $this->method_id,
            'session_token' => $this->session_token,
            'session' => $this->session,
            'session_jwt' => $this->session_jwt,
            'user' => $this->user,
            'reset_sessions' => $this->reset_sessions,
            'user_device' => $this->user_device,
        ];
    }
}

class MagicLinksCreateResponse
{
    public string $user_id;
    public string $token;

    public function __construct(
        string $user_id,
        string $token
    ) {
        $this->user_id = $user_id;
        $this->token = $token;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_id'],
            $data['token']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_id' => $this->user_id,
            'token' => $this->token,
        ];
    }
}

