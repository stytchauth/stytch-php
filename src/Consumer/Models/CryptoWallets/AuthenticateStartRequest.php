<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\CryptoWallets;


final class AuthenticateStartRequest
{
    /**
    * The type of wallet to authenticate. Currently `ethereum` and `solana` are supported. Wallets for any
    * EVM-compatible chains (such as Polygon or BSC) are also supported and are grouped under the `ethereum`
    * type.
     */
    public string $cryptoWalletType;
    /** The crypto wallet address to authenticate. */
    public string $cryptoWalletAddress;
    /** The unique ID of a specific User. You may use an `external_id` here if one is set for the user. */
    public ?string $userId = null;
    /** The `session_token` associated with a User's existing Session. */
    public ?string $sessionToken = null;
    /** The `session_jwt` associated with a User's existing Session. */
    public ?string $sessionJwt = null;
    /**
    * The parameters for a Sign In With Ethereum (SIWE) message. May only be passed if the
    * `crypto_wallet_type` is `ethereum`.
     */
    public ?SIWEParams $siweParams = null;

    public function __construct(
        string $cryptoWalletType,
        string $cryptoWalletAddress,
        ?string $userId = null,
        ?string $sessionToken = null,
        ?string $sessionJwt = null,
        ?SIWEParams $siweParams = null
    ) {
        $this->cryptoWalletType = $cryptoWalletType;
        $this->cryptoWalletAddress = $cryptoWalletAddress;
        $this->userId = $userId;
        $this->sessionToken = $sessionToken;
        $this->sessionJwt = $sessionJwt;
        $this->siweParams = $siweParams;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['crypto_wallet_type'],
            $data['crypto_wallet_address'],
            $data['user_id'] ?? null,
            $data['session_token'] ?? null,
            $data['session_jwt'] ?? null,
            $data['siwe_params'] !== null ? SIWEParams::fromArray($data['siwe_params']) : null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'crypto_wallet_type' => $this->cryptoWalletType,
            'crypto_wallet_address' => $this->cryptoWalletAddress,
            'user_id' => $this->userId,
            'session_token' => $this->sessionToken,
            'session_jwt' => $this->sessionJwt,
            'siwe_params' => $this->siweParams,
        ];
    }
}