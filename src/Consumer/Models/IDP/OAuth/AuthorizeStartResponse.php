<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\IDP\OAuth;

final class AuthorizeStartResponse
{
    public string $requestId;
    public string $userId;
    public \Stytch\Consumer\Models\Users\User $user;
    public \Stytch\Consumer\Models\ConnectedApp\ConnectedAppPublic $client;
    public bool $consentRequired;
    public array $scopeResults;
    public int $statusCode;

    public function __construct(
        string $requestId,
        string $userId,
        \Stytch\Consumer\Models\Users\User $user,
        \Stytch\Consumer\Models\ConnectedApp\ConnectedAppPublic $client,
        bool $consentRequired,
        array $scopeResults,
        int $statusCode
    ) {
        $this->requestId = $requestId;
        $this->userId = $userId;
        $this->user = $user;
        $this->client = $client;
        $this->consentRequired = $consentRequired;
        $this->scopeResults = $scopeResults;
        $this->statusCode = $statusCode;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['request_id'],
            $data['user_id'],
            \Stytch\Consumer\Models\Users\User::fromArray($data['user']),
            \Stytch\Consumer\Models\ConnectedApp\ConnectedAppPublic::fromArray($data['client']),
            $data['consent_required'],
            isset($data['scope_results']) ? array_map(fn ($item) => \Stytch\Consumer\Models\IDP\ScopeResult::fromArray($item), $data['scope_results']) : [],
            $data['status_code']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'request_id' => $this->requestId,
            'user_id' => $this->userId,
            'user' => $this->user,
            'client' => $this->client,
            'consent_required' => $this->consentRequired,
            'scope_results' => $this->scopeResults,
            'status_code' => $this->statusCode,
        ];
    }
}
