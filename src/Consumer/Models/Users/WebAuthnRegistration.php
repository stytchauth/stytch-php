<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\Users;

final class WebAuthnRegistration
{
    /** The unique ID for the Passkey or WebAuthn registration. */
    public string $webauthnRegistrationId;
    /** The `domain` on which Passkey or WebAuthn registration was started. This will be the domain of your app. */
    public string $domain;
    /** The user agent of the User. */
    public string $userAgent;
    /**
    * The verified boolean denotes whether or not this send method, e.g. phone number, email address, etc.,
    * has been successfully authenticated by the User.
     */
    public bool $verified;
    /**
    * The `authenticator_type` string displays the requested authenticator type of the Passkey or WebAuthn
    * device. The two valid types are "platform" and "cross-platform". If no value is present, the Passkey or
    * WebAuthn device was created without an authenticator type preference.
     */
    public string $authenticatorType;
    /** The `name` of the Passkey or WebAuthn registration. */
    public string $name;

    public function __construct(
        string $webauthnRegistrationId,
        string $domain,
        string $userAgent,
        bool $verified,
        string $authenticatorType,
        string $name
    ) {
        $this->webauthnRegistrationId = $webauthnRegistrationId;
        $this->domain = $domain;
        $this->userAgent = $userAgent;
        $this->verified = $verified;
        $this->authenticatorType = $authenticatorType;
        $this->name = $name;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['webauthn_registration_id'],
            $data['domain'],
            $data['user_agent'],
            $data['verified'],
            $data['authenticator_type'],
            $data['name']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'webauthn_registration_id' => $this->webauthnRegistrationId,
            'domain' => $this->domain,
            'user_agent' => $this->userAgent,
            'verified' => $this->verified,
            'authenticator_type' => $this->authenticatorType,
            'name' => $this->name,
        ];
    }
}
