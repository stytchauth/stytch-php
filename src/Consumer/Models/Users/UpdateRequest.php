<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\Users;

class UpdateRequest
{
    /** The unique ID of a specific User. You may use an `external_id` here if one is set for the user. */
    public string $userId;
    /** The name of the user. Each field in the name object is optional. */
    public ?Name $name = null;
    /**
    * Provided attributes to help with fraud detection. These values are pulled and passed into Stytch
    * endpoints by your application.
     */
    public ?\Stytch\Consumer\Models\Attributes $attributes = null;
    /**
    * The `trusted_metadata` field contains an arbitrary JSON object of application-specific data. See the
    * [Metadata](https://stytch.com/docs/api/metadata) reference for complete field behavior details.
     */
    public ?array $trustedMetadata = null;
    /**
    * The `untrusted_metadata` field contains an arbitrary JSON object of application-specific data. Untrusted
    * metadata can be edited by end users directly via the SDK, and **cannot be used to store critical
    * information.** See the [Metadata](https://stytch.com/docs/api/metadata) reference for complete field
    * behavior details.
     */
    public ?array $untrustedMetadata = null;
    /**
    * An identifier that can be used in API calls wherever a user_id is expected. This is a string consisting
    * of alphanumeric, `.`, `_`, `-`, or `|` characters with a maximum length of 128 characters.
     */
    public ?string $externalId = null;

    public function __construct(
        string $userId,
        ?Name $name = null,
        ?\Stytch\Consumer\Models\Attributes $attributes = null,
        ?array $trustedMetadata = null,
        ?array $untrustedMetadata = null,
        ?string $externalId = null
    ) {
        $this->userId = $userId;
        $this->name = $name;
        $this->attributes = $attributes;
        $this->trustedMetadata = $trustedMetadata;
        $this->untrustedMetadata = $untrustedMetadata;
        $this->externalId = $externalId;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_id'],
            $data['name'] !== null ? Name::fromArray($data['name']) : null,
            $data['attributes'] !== null ? \Stytch\Consumer\Models\Attributes::fromArray($data['attributes']) : null,
            $data['trusted_metadata'] ?? null,
            $data['untrusted_metadata'] ?? null,
            $data['external_id'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_id' => $this->userId,
            'name' => $this->name,
            'attributes' => $this->attributes,
            'trusted_metadata' => $this->trustedMetadata,
            'untrusted_metadata' => $this->untrustedMetadata,
            'external_id' => $this->externalId,
        ];
    }
}
