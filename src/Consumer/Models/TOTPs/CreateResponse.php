<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\TOTPs;

class CreateResponse
{
    /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
     */
    public string $requestId;
    /** The unique ID for a TOTP instance. */
    public string $totpId;
    /** The TOTP secret key shared between the authenticator app and the server used to generate TOTP codes. */
    public string $secret;
    /** The QR code image encoded in base64. */
    public string $qrCode;
    /** The recovery codes used to authenticate the user without an authenticator app. */
    public array $recoveryCodes;
    /**
    * The `user` object affected by this API call. See the
    * [Get user endpoint](https://stytch.com/docs/api/get-user) for complete response field details.
     */
    public \Stytch\Consumer\Models\Users\User $user;
    /** The unique ID of the affected User. */
    public string $userId;
    /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
     */
    public int $statusCode;

    public function __construct(
        string $requestId,
        string $totpId,
        string $secret,
        string $qrCode,
        array $recoveryCodes,
        \Stytch\Consumer\Models\Users\User $user,
        string $userId,
        int $statusCode
    ) {
        $this->requestId = $requestId;
        $this->totpId = $totpId;
        $this->secret = $secret;
        $this->qrCode = $qrCode;
        $this->recoveryCodes = $recoveryCodes;
        $this->user = $user;
        $this->userId = $userId;
        $this->statusCode = $statusCode;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['request_id'],
            $data['totp_id'],
            $data['secret'],
            $data['qr_code'],
            $data['recovery_codes'],
            \Stytch\Consumer\Models\Users\User::fromArray($data['user']),
            $data['user_id'],
            $data['status_code']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'request_id' => $this->requestId,
            'totp_id' => $this->totpId,
            'secret' => $this->secret,
            'qr_code' => $this->qrCode,
            'recovery_codes' => $this->recoveryCodes,
            'user' => $this->user,
            'user_id' => $this->userId,
            'status_code' => $this->statusCode,
        ];
    }
}
