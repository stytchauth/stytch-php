<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\Fraud\Fingerprint;

final class LookupResponse
{
    /**
    * Globally unique UUID that is returned with every API call. This value is important to log for debugging
    * purposes; we may ask for this value to help identify a specific API call when helping you debug an issue.
     */
    public string $requestId;
    /** The telemetry ID associated with the fingerprint getting looked up. */
    public string $telemetryId;
    /** A Stytch fingerprint consists of the following identifiers: */
    public \Stytch\Consumer\Models\Fraud\Fingerprints $fingerprints;
    /** The metadata associated with each fingerprint */
    public \Stytch\Consumer\Models\Fraud\Verdict $verdict;
    /**
    * External identifiers that you wish to associate with the given telemetry ID. You will be able to search
    * for fingerprint results by these identifiers in the DFP analytics dashboard. External metadata fields
    * may not exceed 65 characters. They may only contain alphanumerics and the characters `_` `-` `+` `.` or
    * `@`.
     */
    public \Stytch\Consumer\Models\Fraud\Metadata $externalMetadata;
    /**
    * The time when the fingerprint was taken. Values conform to the RFC 3339 standard and are expressed in
    * UTC, e.g. `2021-12-29T12:33:09Z`.
     */
    public string $createdAt;
    /**
    * The timestamp when the fingerprint expires. Values conform to the RFC 3339 standard and are expressed in
    * UTC, e.g. `2021-12-29T12:33:09Z`.
     */
    public string $expiresAt;
    /**
    * The HTTP status code of the response. Stytch follows standard HTTP response status code patterns, e.g.
    * 2XX values equate to success, 3XX values are redirects, 4XX are client errors, and 5XX are server errors.
     */
    public int $statusCode;
    /** Additional information about the user's browser and network. */
    public ?\Stytch\Consumer\Models\Fraud\Properties $properties = null;
    /**
    * The raw device attributes, such as screen size, that were collected by the Device Fingerprinting product
    * to generate the fingerprints and verdict. You must be specifically enabled for the raw signals feature
    * to see this field. You can find documentation for the specific fields in the
    * [guides](https://stytch.com/docs/fraud/guides/device-fingerprinting/reference/raw-signals).
     */
    public ?array $rawSignals = null;

    public function __construct(
        string $requestId,
        string $telemetryId,
        \Stytch\Consumer\Models\Fraud\Fingerprints $fingerprints,
        \Stytch\Consumer\Models\Fraud\Verdict $verdict,
        \Stytch\Consumer\Models\Fraud\Metadata $externalMetadata,
        string $createdAt,
        string $expiresAt,
        int $statusCode,
        ?\Stytch\Consumer\Models\Fraud\Properties $properties = null,
        ?array $rawSignals = null
    ) {
        $this->requestId = $requestId;
        $this->telemetryId = $telemetryId;
        $this->fingerprints = $fingerprints;
        $this->verdict = $verdict;
        $this->externalMetadata = $externalMetadata;
        $this->createdAt = $createdAt;
        $this->expiresAt = $expiresAt;
        $this->statusCode = $statusCode;
        $this->properties = $properties;
        $this->rawSignals = $rawSignals;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['request_id'],
            $data['telemetry_id'],
            \Stytch\Consumer\Models\Fraud\Fingerprints::fromArray($data['fingerprints']),
            \Stytch\Consumer\Models\Fraud\Verdict::fromArray($data['verdict']),
            \Stytch\Consumer\Models\Fraud\Metadata::fromArray($data['external_metadata']),
            $data['created_at'],
            $data['expires_at'],
            $data['status_code'],
            $data['properties'] !== null ? \Stytch\Consumer\Models\Fraud\Properties::fromArray($data['properties']) : null,
            $data['raw_signals'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'request_id' => $this->requestId,
            'telemetry_id' => $this->telemetryId,
            'fingerprints' => $this->fingerprints,
            'verdict' => $this->verdict,
            'external_metadata' => $this->externalMetadata,
            'created_at' => $this->createdAt,
            'expires_at' => $this->expiresAt,
            'status_code' => $this->statusCode,
            'properties' => $this->properties,
            'raw_signals' => $this->rawSignals,
        ];
    }
}
