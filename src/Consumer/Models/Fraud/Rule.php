<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\Fraud;

final class Rule
{
    /**
    * The rule type. The possible values are `VISITOR_ID`, `BROWSER_ID`, `VISITOR_FINGERPRINT`,
    * `BROWSER_FINGERPRINT`, `HARDWARE_FINGERPRINT`, `NETWORK_FINGERPRINT`, `CIDR_BLOCK`, `ASN`, or
    * `COUNTRY_CODE`.
     */
    public string $ruleType;
    /** The action (`ALLOW`, `BLOCK`, or `CHALLENGE`) that will be returned for this rule. */
    public string $action;
    /**
    * The time when the rule was created. Values conform to the RFC 3339 standard and are expressed in UTC,
    * e.g. `2021-12-29T12:33:09Z`.
     */
    public string $createdAt;
    /** The visitor ID that a rule was set for. */
    public ?string $visitorId = null;
    /** The browser ID that a rule was set for. */
    public ?string $browserId = null;
    /** The visitor fingerprint that a rule was set for. */
    public ?string $visitorFingerprint = null;
    /** The browser fingerprint that a rule was set for. */
    public ?string $browserFingerprint = null;
    /** The hardware fingerprint that a rule was set for. */
    public ?string $hardwareFingerprint = null;
    /** The network fingerprint that a rule was set for. */
    public ?string $networkFingerprint = null;
    /**
    * The CIDR block that a rule was set for. If an end user's IP address is within this CIDR block, this rule
    * will be applied.
     */
    public ?string $cidrBlock = null;
    /** The country code that a rule was set for. */
    public ?string $countryCode = null;
    /** The ASN that a rule was set for. */
    public ?string $asn = null;
    /** A description for the rule. */
    public ?string $description = null;
    /**
    * The timestamp when the rule expires. Values conform to the RFC 3339 standard and are expressed in UTC,
    * e.g. `2021-12-29T12:33:09Z`.
     */
    public ?string $expiresAt = null;
    /**
    * The time when the rule was last updated. Will be null if the rule has never been updated. Values conform
    * to the RFC 3339 standard and are expressed in UTC, e.g. `2021-12-29T12:33:09Z`.
     */
    public ?string $lastUpdatedAt = null;

    public function __construct(
        string $ruleType,
        string $action,
        string $createdAt,
        ?string $visitorId = null,
        ?string $browserId = null,
        ?string $visitorFingerprint = null,
        ?string $browserFingerprint = null,
        ?string $hardwareFingerprint = null,
        ?string $networkFingerprint = null,
        ?string $cidrBlock = null,
        ?string $countryCode = null,
        ?string $asn = null,
        ?string $description = null,
        ?string $expiresAt = null,
        ?string $lastUpdatedAt = null
    ) {
        $this->ruleType = $ruleType;
        $this->action = $action;
        $this->createdAt = $createdAt;
        $this->visitorId = $visitorId;
        $this->browserId = $browserId;
        $this->visitorFingerprint = $visitorFingerprint;
        $this->browserFingerprint = $browserFingerprint;
        $this->hardwareFingerprint = $hardwareFingerprint;
        $this->networkFingerprint = $networkFingerprint;
        $this->cidrBlock = $cidrBlock;
        $this->countryCode = $countryCode;
        $this->asn = $asn;
        $this->description = $description;
        $this->expiresAt = $expiresAt;
        $this->lastUpdatedAt = $lastUpdatedAt;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['rule_type'],
            $data['action'],
            $data['created_at'],
            $data['visitor_id'] ?? null,
            $data['browser_id'] ?? null,
            $data['visitor_fingerprint'] ?? null,
            $data['browser_fingerprint'] ?? null,
            $data['hardware_fingerprint'] ?? null,
            $data['network_fingerprint'] ?? null,
            $data['cidr_block'] ?? null,
            $data['country_code'] ?? null,
            $data['asn'] ?? null,
            $data['description'] ?? null,
            $data['expires_at'] ?? null,
            $data['last_updated_at'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'rule_type' => $this->ruleType,
            'action' => $this->action,
            'created_at' => $this->createdAt,
            'visitor_id' => $this->visitorId,
            'browser_id' => $this->browserId,
            'visitor_fingerprint' => $this->visitorFingerprint,
            'browser_fingerprint' => $this->browserFingerprint,
            'hardware_fingerprint' => $this->hardwareFingerprint,
            'network_fingerprint' => $this->networkFingerprint,
            'cidr_block' => $this->cidrBlock,
            'country_code' => $this->countryCode,
            'asn' => $this->asn,
            'description' => $this->description,
            'expires_at' => $this->expiresAt,
            'last_updated_at' => $this->lastUpdatedAt,
        ];
    }
}
