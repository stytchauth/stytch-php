<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\Passwords;


final class PBKDF2Config
{
    /** The salt value, which should be in a base64 encoded string form. */
    public string $salt;
    /** The iteration amount. */
    public int $iterationAmount;
    /** The key length, also known as the hash length. */
    public int $keyLength;
    /**
    * The algorithm that was used to generate the HMAC hash. Accepted values are "sha512" and sha256".
    * Defaults to sha256.
     */
    public string $algorithm;

    public function __construct(
        string $salt,
        int $iterationAmount,
        int $keyLength,
        string $algorithm
    ) {
        $this->salt = $salt;
        $this->iterationAmount = $iterationAmount;
        $this->keyLength = $keyLength;
        $this->algorithm = $algorithm;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['salt'],
            $data['iteration_amount'],
            $data['key_length'],
            $data['algorithm']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'salt' => $this->salt,
            'iteration_amount' => $this->iterationAmount,
            'key_length' => $this->keyLength,
            'algorithm' => $this->algorithm,
        ];
    }
}