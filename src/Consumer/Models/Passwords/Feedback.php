<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\Passwords;

final class Feedback
{
    /**
    * For `zxcvbn` validation, contains an end user consumable warning if the password is valid but not strong
    * enough.
     */
    public string $warning;
    /**
    * For `zxcvbn` validation, contains end user consumable suggestions on how to improve the strength of the
    * password.
     */
    public array $suggestions;
    /**
    * Contains which LUDS properties are fulfilled by the password and which are missing to convert an invalid
    * password into a valid one. You'll use these fields to provide feedback to the user on how to improve the
    * password.
     */
    public ?LUDSRequirements $ludsRequirements = null;

    public function __construct(
        string $warning,
        array $suggestions,
        ?LUDSRequirements $ludsRequirements = null
    ) {
        $this->warning = $warning;
        $this->suggestions = $suggestions;
        $this->ludsRequirements = $ludsRequirements;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['warning'],
            $data['suggestions'],
            isset($data['luds_requirements']) && $data['luds_requirements'] !== null ? LUDSRequirements::fromArray($data['luds_requirements']) : null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'warning' => $this->warning,
            'suggestions' => $this->suggestions,
            'luds_requirements' => $this->ludsRequirements,
        ];
    }
}
