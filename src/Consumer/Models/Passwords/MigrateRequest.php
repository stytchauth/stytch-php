<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\Passwords;

final class MigrateRequest
{
    /** The email address of the end user. */
    public string $email;
    /** The password hash. For a Scrypt or PBKDF2 hash, the hash needs to be a base64 encoded string. */
    public string $hash;
    /**
    * The password hash used. Currently `bcrypt`, `scrypt`, `argon_2i`, `argon_2id`, `md_5`, `sha_1`, and
    * `pbkdf_2` are supported.
     */
    public string $hashType;
    /** Optional parameters for MD-5 hash types. */
    public ?MD5Config $md5Config = null;
    /** Required parameters if the argon2 hex form, as opposed to the encoded form, is supplied. */
    public ?Argon2Config $argon2Config = null;
    /** Optional parameters for SHA-1 hash types. */
    public ?SHA1Config $sha1Config = null;
    /**
    * Required parameters if the scrypt is not provided in a
    * [PHC encoded form](https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#phc-string-format).
     */
    public ?ScryptConfig $scryptConfig = null;
    /** Required additional parameters for PBKDF2 hash keys. */
    public ?PBKDF2Config $pbkdf2Config = null;
    /**
    * The `trusted_metadata` field contains an arbitrary JSON object of application-specific data. See the
    * [Metadata](https://stytch.com/docs/api/metadata) reference for complete field behavior details.
     */
    public ?array $trustedMetadata = null;
    /**
    * The `untrusted_metadata` field contains an arbitrary JSON object of application-specific data. Untrusted
    * metadata can be edited by end users directly via the SDK, and **cannot be used to store critical
    * information.** See the [Metadata](https://stytch.com/docs/api/metadata) reference for complete field
    * behavior details.
     */
    public ?array $untrustedMetadata = null;
    /**
    * Whether to set the user's email as verified. This is a dangerous field, incorrect use may lead to users
    * getting erroneously
    *                 deduplicated into one User object. This flag should only be set if you can attest that
    * the user owns the email address in question.
     */
    public ?bool $setEmailVerified = null;
    /** The name of the user. Each field in the name object is optional. */
    public ?\Stytch\Consumer\Models\Users\Name $name = null;
    /** The phone number of the user. The phone number should be in E.164 format (i.e. +1XXXXXXXXXX). */
    public ?string $phoneNumber = null;
    /**
    * Whether to set the user's phone number as verified. This is a dangerous field, this flag should only be
    * set if you can attest that
    *    the user owns the phone number in question.
     */
    public ?bool $setPhoneNumberVerified = null;
    /**
    * If a new user is created, this will set an identifier that can be used in API calls wherever a user_id
    * is expected. This is a string consisting of alphanumeric, `.`, `_`, `-`, or `|` characters with a
    * maximum length of 128 characters.
     */
    public ?string $externalId = null;
    public ?array $roles = null;

    public function __construct(
        string $email,
        string $hash,
        string $hashType,
        ?MD5Config $md5Config = null,
        ?Argon2Config $argon2Config = null,
        ?SHA1Config $sha1Config = null,
        ?ScryptConfig $scryptConfig = null,
        ?PBKDF2Config $pbkdf2Config = null,
        ?array $trustedMetadata = null,
        ?array $untrustedMetadata = null,
        ?bool $setEmailVerified = null,
        ?\Stytch\Consumer\Models\Users\Name $name = null,
        ?string $phoneNumber = null,
        ?bool $setPhoneNumberVerified = null,
        ?string $externalId = null,
        ?array $roles = null
    ) {
        $this->email = $email;
        $this->hash = $hash;
        $this->hashType = $hashType;
        $this->md5Config = $md5Config;
        $this->argon2Config = $argon2Config;
        $this->sha1Config = $sha1Config;
        $this->scryptConfig = $scryptConfig;
        $this->pbkdf2Config = $pbkdf2Config;
        $this->trustedMetadata = $trustedMetadata;
        $this->untrustedMetadata = $untrustedMetadata;
        $this->setEmailVerified = $setEmailVerified;
        $this->name = $name;
        $this->phoneNumber = $phoneNumber;
        $this->setPhoneNumberVerified = $setPhoneNumberVerified;
        $this->externalId = $externalId;
        $this->roles = $roles;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['email'],
            $data['hash'],
            $data['hash_type'],
            $data['md_5_config'] !== null ? MD5Config::fromArray($data['md_5_config']) : null,
            $data['argon_2_config'] !== null ? Argon2Config::fromArray($data['argon_2_config']) : null,
            $data['sha_1_config'] !== null ? SHA1Config::fromArray($data['sha_1_config']) : null,
            $data['scrypt_config'] !== null ? ScryptConfig::fromArray($data['scrypt_config']) : null,
            $data['pbkdf_2_config'] !== null ? PBKDF2Config::fromArray($data['pbkdf_2_config']) : null,
            $data['trusted_metadata'] ?? null,
            $data['untrusted_metadata'] ?? null,
            $data['set_email_verified'] ?? null,
            $data['name'] !== null ? \Stytch\Consumer\Models\Users\Name::fromArray($data['name']) : null,
            $data['phone_number'] ?? null,
            $data['set_phone_number_verified'] ?? null,
            $data['external_id'] ?? null,
            $data['roles'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'email' => $this->email,
            'hash' => $this->hash,
            'hash_type' => $this->hashType,
            'md_5_config' => $this->md5Config,
            'argon_2_config' => $this->argon2Config,
            'sha_1_config' => $this->sha1Config,
            'scrypt_config' => $this->scryptConfig,
            'pbkdf_2_config' => $this->pbkdf2Config,
            'trusted_metadata' => $this->trustedMetadata,
            'untrusted_metadata' => $this->untrustedMetadata,
            'set_email_verified' => $this->setEmailVerified,
            'name' => $this->name,
            'phone_number' => $this->phoneNumber,
            'set_phone_number_verified' => $this->setPhoneNumberVerified,
            'external_id' => $this->externalId,
            'roles' => $this->roles,
        ];
    }
}
