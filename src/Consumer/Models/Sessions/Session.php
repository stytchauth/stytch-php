<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\Sessions;

final class Session
{
    /** A unique identifier for a specific Session. */
    public string $sessionId;
    /** The unique ID of the affected User. */
    public string $userId;
    /** An array of different authentication factors that comprise a Session. */
    public array $authenticationFactors;
    public array $roles;
    /**
    * The timestamp when the Session was created. Values conform to the RFC 3339 standard and are expressed in
    * UTC, e.g. `2021-12-29T12:33:09Z`.
     */
    public ?string $startedAt = null;
    /**
    * The timestamp when the Session was last accessed. Values conform to the RFC 3339 standard and are
    * expressed in UTC, e.g. `2021-12-29T12:33:09Z`.
     */
    public ?string $lastAccessedAt = null;
    /**
    * The timestamp when the Session expires. Values conform to the RFC 3339 standard and are expressed in
    * UTC, e.g. `2021-12-29T12:33:09Z`.
     */
    public ?string $expiresAt = null;
    /** Provided attributes help with fraud detection. */
    public ?\Stytch\Consumer\Models\Attributes $attributes = null;
    /**
    * The custom claims map for a Session. Claims can be added to a session during a Sessions authenticate
    * call.
     */
    public ?array $customClaims = null;

    public function __construct(
        string $sessionId,
        string $userId,
        array $authenticationFactors,
        array $roles,
        ?string $startedAt = null,
        ?string $lastAccessedAt = null,
        ?string $expiresAt = null,
        ?\Stytch\Consumer\Models\Attributes $attributes = null,
        ?array $customClaims = null
    ) {
        $this->sessionId = $sessionId;
        $this->userId = $userId;
        $this->authenticationFactors = $authenticationFactors;
        $this->roles = $roles;
        $this->startedAt = $startedAt;
        $this->lastAccessedAt = $lastAccessedAt;
        $this->expiresAt = $expiresAt;
        $this->attributes = $attributes;
        $this->customClaims = $customClaims;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['session_id'],
            $data['user_id'],
            isset($data['authentication_factors']) ? array_map(fn ($item) => AuthenticationFactor::fromArray($item), $data['authentication_factors']) : [],
            $data['roles'],
            $data['started_at'] ?? null,
            $data['last_accessed_at'] ?? null,
            $data['expires_at'] ?? null,
            $data['attributes'] !== null ? \Stytch\Consumer\Models\Attributes::fromArray($data['attributes']) : null,
            $data['custom_claims'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'session_id' => $this->sessionId,
            'user_id' => $this->userId,
            'authentication_factors' => $this->authenticationFactors,
            'roles' => $this->roles,
            'started_at' => $this->startedAt,
            'last_accessed_at' => $this->lastAccessedAt,
            'expires_at' => $this->expiresAt,
            'attributes' => $this->attributes,
            'custom_claims' => $this->customClaims,
        ];
    }
}
