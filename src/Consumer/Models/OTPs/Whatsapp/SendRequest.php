<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\OTPs\Whatsapp;

final class SendRequest
{
    /**
    * The phone number to use for one-time passcodes. The phone number should be in E.164 format (i.e.
    * +1XXXXXXXXXX). You may use +10000000000 to test this endpoint, see
    * [Testing](https://stytch.com/docs/home#resources_testing) for more detail.
     */
    public string $phoneNumber;
    /**
    * Set the expiration for the one-time passcode, in minutes. The minimum expiration is 1 minute and the
    * maximum is 10 minutes. The default expiration is 2 minutes.
     */
    public ?int $expirationMinutes = null;
    /**
    * Provided attributes to help with fraud detection. These values are pulled and passed into Stytch
    * endpoints by your application.
     */
    public ?\Stytch\Consumer\Models\Attributes $attributes = null;
    /**
    * Used to determine which language to use when sending the user this delivery method. Parameter is a
    * [IETF BCP 47 language tag](https://www.w3.org/International/articles/language-tags/), e.g. `"en"`.
    *
    * Currently supported languages are English (`"en"`), Spanish (`"es"`), French (`"fr"`) and Brazilian
    * Portuguese (`"pt-br"`); if no value is provided, the copy defaults to English.
    *
    * Request support for additional languages
    * [here](https://docs.google.com/forms/d/e/1FAIpQLScZSpAu_m2AmLXRT3F3kap-s_mcV6UTBitYn6CdyWP0-o7YjQ/viewform?usp=sf_link")!
     */
    public ?string $locale = null;
    /** The unique ID of a specific User. You may use an `external_id` here if one is set for the user. */
    public ?string $userId = null;
    /** The `session_token` associated with a User's existing Session. */
    public ?string $sessionToken = null;
    /** The `session_jwt` associated with a User's existing Session. */
    public ?string $sessionJwt = null;

    public function __construct(
        string $phoneNumber,
        ?int $expirationMinutes = null,
        ?\Stytch\Consumer\Models\Attributes $attributes = null,
        ?string $locale = null,
        ?string $userId = null,
        ?string $sessionToken = null,
        ?string $sessionJwt = null
    ) {
        $this->phoneNumber = $phoneNumber;
        $this->expirationMinutes = $expirationMinutes;
        $this->attributes = $attributes;
        $this->locale = $locale;
        $this->userId = $userId;
        $this->sessionToken = $sessionToken;
        $this->sessionJwt = $sessionJwt;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['phone_number'],
            $data['expiration_minutes'] ?? null,
            isset($data['attributes']) && $data['attributes'] !== null ? \Stytch\Consumer\Models\Attributes::fromArray($data['attributes']) : null,
            $data['locale'] ?? null,
            $data['user_id'] ?? null,
            $data['session_token'] ?? null,
            $data['session_jwt'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'phone_number' => $this->phoneNumber,
            'expiration_minutes' => $this->expirationMinutes,
            'attributes' => $this->attributes,
            'locale' => $this->locale,
            'user_id' => $this->userId,
            'session_token' => $this->sessionToken,
            'session_jwt' => $this->sessionJwt,
        ];
    }
}
