<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models;

class PolicyScope
{
    public string $scope;
    public string $description;
    public ?array $permissions;

    public function __construct(
        string $scope,
        string $description,
        ?array $permissions
    ) {
        $this->scope = $scope;
        $this->description = $description;
        $this->permissions = $permissions;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['scope'],
            $data['description'],
            $data['permissions'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'scope' => $this->scope,
            'description' => $this->description,
            'permissions' => $this->permissions,
        ];
    }
}

class PolicyRole
{
    public string $role_id;
    public string $description;
    public ?array $permissions;

    public function __construct(
        string $role_id,
        string $description,
        ?array $permissions
    ) {
        $this->role_id = $role_id;
        $this->description = $description;
        $this->permissions = $permissions;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['role_id'],
            $data['description'],
            $data['permissions'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'role_id' => $this->role_id,
            'description' => $this->description,
            'permissions' => $this->permissions,
        ];
    }
}

class PolicyResource
{
    public string $resource_id;
    public string $description;
    public array $actions;

    public function __construct(
        string $resource_id,
        string $description,
        array $actions
    ) {
        $this->resource_id = $resource_id;
        $this->description = $description;
        $this->actions = $actions;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['resource_id'],
            $data['description'],
            $data['actions']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'resource_id' => $this->resource_id,
            'description' => $this->description,
            'actions' => $this->actions,
        ];
    }
}

class PolicyScopePermission
{
    public string $resource_id;
    public array $actions;

    public function __construct(
        string $resource_id,
        array $actions
    ) {
        $this->resource_id = $resource_id;
        $this->actions = $actions;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['resource_id'],
            $data['actions']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'resource_id' => $this->resource_id,
            'actions' => $this->actions,
        ];
    }
}

class GetRBACPolicyExternalResponse
{
    public ?Policy $policy;

    public function __construct(
        ?Policy $policy
    ) {
        $this->policy = $policy;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['policy'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'policy' => $this->policy,
        ];
    }
}

class Policy
{
    public ?array $roles;
    public ?array $resources;
    public ?array $scopes;

    public function __construct(
        ?array $roles,
        ?array $resources,
        ?array $scopes
    ) {
        $this->roles = $roles;
        $this->resources = $resources;
        $this->scopes = $scopes;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['roles'] ?? null,
            $data['resources'] ?? null,
            $data['scopes'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'roles' => $this->roles,
            'resources' => $this->resources,
            'scopes' => $this->scopes,
        ];
    }
}

class PolicyRolePermission
{
    public string $resource_id;
    public array $actions;

    public function __construct(
        string $resource_id,
        array $actions
    ) {
        $this->resource_id = $resource_id;
        $this->actions = $actions;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['resource_id'],
            $data['actions']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'resource_id' => $this->resource_id,
            'actions' => $this->actions,
        ];
    }
}

