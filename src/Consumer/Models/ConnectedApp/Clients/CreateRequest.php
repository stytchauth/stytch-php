<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models\ConnectedApp\Clients;

class CreateRequest
{
    /**
    * The type of Connected App. Supported values are `first_party`, `first_party_public`, `third_party`, and
    * `third_party_public`.
     */
    public string $clientType;
    /** A human-readable name for the client. */
    public ?string $clientName = null;
    /** A human-readable description for the client. */
    public ?string $clientDescription = null;
    /** Array of redirect URI values for use in OAuth Authorization flows. */
    public ?array $redirectURLS = null;
    /**
    * Valid for first party clients only. If `true`, an authorization token granted to this Client can be
    * exchanged for a full Stytch session.
     */
    public ?bool $fullAccessAllowed = null;
    /** The number of minutes before the access token expires. The default is 60 minutes. */
    public ?int $accessTokenExpiryMinutes = null;
    /** The custom audience for the access token. */
    public ?string $accessTokenCustomAudience = null;
    /** The content of the access token custom claims template. The template must be a valid JSON object. */
    public ?string $accessTokenTemplateContent = null;
    /** Array of redirect URI values for use in OIDC Logout flows. */
    public ?array $postLogoutRedirectURLS = null;
    /** The logo URL of the Connected App, if any. */
    public ?string $logoURL = null;
    /**
    * Valid for first party clients only. If true, the client does not need to request explicit user consent
    * for the `offline_access` scope.
     */
    public ?bool $bypassConsentForOfflineAccess = null;

    public function __construct(
        string $clientType,
        ?string $clientName = null,
        ?string $clientDescription = null,
        ?array $redirectURLS = null,
        ?bool $fullAccessAllowed = null,
        ?int $accessTokenExpiryMinutes = null,
        ?string $accessTokenCustomAudience = null,
        ?string $accessTokenTemplateContent = null,
        ?array $postLogoutRedirectURLS = null,
        ?string $logoURL = null,
        ?bool $bypassConsentForOfflineAccess = null
    ) {
        $this->clientType = $clientType;
        $this->clientName = $clientName;
        $this->clientDescription = $clientDescription;
        $this->redirectURLS = $redirectURLS;
        $this->fullAccessAllowed = $fullAccessAllowed;
        $this->accessTokenExpiryMinutes = $accessTokenExpiryMinutes;
        $this->accessTokenCustomAudience = $accessTokenCustomAudience;
        $this->accessTokenTemplateContent = $accessTokenTemplateContent;
        $this->postLogoutRedirectURLS = $postLogoutRedirectURLS;
        $this->logoURL = $logoURL;
        $this->bypassConsentForOfflineAccess = $bypassConsentForOfflineAccess;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['client_type'],
            $data['client_name'] ?? null,
            $data['client_description'] ?? null,
            $data['redirect_urls'] ?? null,
            $data['full_access_allowed'] ?? null,
            $data['access_token_expiry_minutes'] ?? null,
            $data['access_token_custom_audience'] ?? null,
            $data['access_token_template_content'] ?? null,
            $data['post_logout_redirect_urls'] ?? null,
            $data['logo_url'] ?? null,
            $data['bypass_consent_for_offline_access'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'client_type' => $this->clientType,
            'client_name' => $this->clientName,
            'client_description' => $this->clientDescription,
            'redirect_urls' => $this->redirectURLS,
            'full_access_allowed' => $this->fullAccessAllowed,
            'access_token_expiry_minutes' => $this->accessTokenExpiryMinutes,
            'access_token_custom_audience' => $this->accessTokenCustomAudience,
            'access_token_template_content' => $this->accessTokenTemplateContent,
            'post_logout_redirect_urls' => $this->postLogoutRedirectURLS,
            'logo_url' => $this->logoURL,
            'bypass_consent_for_offline_access' => $this->bypassConsentForOfflineAccess,
        ];
    }
}
