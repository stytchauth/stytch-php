<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models;

class AmazonOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class AuthorizationVerdict
{
    public bool $authorized;
    public array $granting_roles;

    public function __construct(
        bool $authorized,
        array $granting_roles
    ) {
        $this->authorized = $authorized;
        $this->granting_roles = $granting_roles;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['authorized'],
            $data['granting_roles']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'authorized' => $this->authorized,
            'granting_roles' => $this->granting_roles,
        ];
    }
}

class SessionsGetResponse
{
    public ?array $sessions;

    public function __construct(
        ?array $sessions
    ) {
        $this->sessions = $sessions;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['sessions'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'sessions' => $this->sessions,
        ];
    }
}

class SessionsAuthenticateResponse
{
    public Session $session;
    public string $session_token;
    public string $session_jwt;
    public User $user;
    public ?AuthorizationVerdict $verdict;

    public function __construct(
        Session $session,
        string $session_token,
        string $session_jwt,
        User $user,
        ?AuthorizationVerdict $verdict
    ) {
        $this->session = $session;
        $this->session_token = $session_token;
        $this->session_jwt = $session_jwt;
        $this->user = $user;
        $this->verdict = $verdict;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['session'],
            $data['session_token'],
            $data['session_jwt'],
            $data['user'],
            $data['verdict'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'session' => $this->session,
            'session_token' => $this->session_token,
            'session_jwt' => $this->session_jwt,
            'user' => $this->user,
            'verdict' => $this->verdict,
        ];
    }
}

class AuthenticatorAppFactor
{
    public string $totp_id;

    public function __construct(
        string $totp_id
    ) {
        $this->totp_id = $totp_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['totp_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'totp_id' => $this->totp_id,
        ];
    }
}

class HubspotOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class GitLabOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class ShopifyOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class AuthenticationFactor
{
    public string $type;
    public string $delivery_method;
    public ?string $last_authenticated_at;
    public ?string $created_at;
    public ?string $updated_at;
    public ?EmailFactor $email_factor;
    public ?PhoneNumberFactor $phone_number_factor;
    public ?GoogleOAuthFactor $google_oauth_factor;
    public ?MicrosoftOAuthFactor $microsoft_oauth_factor;
    public ?AppleOAuthFactor $apple_oauth_factor;
    public ?WebAuthnFactor $webauthn_factor;
    public ?AuthenticatorAppFactor $authenticator_app_factor;
    public ?GithubOAuthFactor $github_oauth_factor;
    public ?RecoveryCodeFactor $recovery_code_factor;
    public ?FacebookOAuthFactor $facebook_oauth_factor;
    public ?CryptoWalletFactor $crypto_wallet_factor;
    public ?AmazonOAuthFactor $amazon_oauth_factor;
    public ?BitbucketOAuthFactor $bitbucket_oauth_factor;
    public ?CoinbaseOAuthFactor $coinbase_oauth_factor;
    public ?DiscordOAuthFactor $discord_oauth_factor;
    public ?FigmaOAuthFactor $figma_oauth_factor;
    public ?GitLabOAuthFactor $git_lab_oauth_factor;
    public ?InstagramOAuthFactor $instagram_oauth_factor;
    public ?LinkedInOAuthFactor $linked_in_oauth_factor;
    public ?ShopifyOAuthFactor $shopify_oauth_factor;
    public ?SlackOAuthFactor $slack_oauth_factor;
    public ?SnapchatOAuthFactor $snapchat_oauth_factor;
    public ?SpotifyOAuthFactor $spotify_oauth_factor;
    public ?SteamOAuthFactor $steam_oauth_factor;
    public ?TikTokOAuthFactor $tik_tok_oauth_factor;
    public ?TwitchOAuthFactor $twitch_oauth_factor;
    public ?TwitterOAuthFactor $twitter_oauth_factor;
    public ?EmbeddableMagicLinkFactor $embeddable_magic_link_factor;
    public ?BiometricFactor $biometric_factor;
    public ?SAMLSSOFactor $saml_sso_factor;
    public ?OIDCSSOFactor $oidc_sso_factor;
    public ?SalesforceOAuthFactor $salesforce_oauth_factor;
    public ?YahooOAuthFactor $yahoo_oauth_factor;
    public ?HubspotOAuthFactor $hubspot_oauth_factor;
    public ?SlackOAuthExchangeFactor $slack_oauth_exchange_factor;
    public ?HubspotOAuthExchangeFactor $hubspot_oauth_exchange_factor;
    public ?GithubOAuthExchangeFactor $github_oauth_exchange_factor;
    public ?GoogleOAuthExchangeFactor $google_oauth_exchange_factor;
    public ?ImpersonatedFactor $impersonated_factor;
    public ?OAuthAccessTokenExchangeFactor $oauth_access_token_exchange_factor;
    public ?TrustedAuthTokenFactor $trusted_auth_token_factor;

    public function __construct(
        string $type,
        string $delivery_method,
        ?string $last_authenticated_at,
        ?string $created_at,
        ?string $updated_at,
        ?EmailFactor $email_factor,
        ?PhoneNumberFactor $phone_number_factor,
        ?GoogleOAuthFactor $google_oauth_factor,
        ?MicrosoftOAuthFactor $microsoft_oauth_factor,
        ?AppleOAuthFactor $apple_oauth_factor,
        ?WebAuthnFactor $webauthn_factor,
        ?AuthenticatorAppFactor $authenticator_app_factor,
        ?GithubOAuthFactor $github_oauth_factor,
        ?RecoveryCodeFactor $recovery_code_factor,
        ?FacebookOAuthFactor $facebook_oauth_factor,
        ?CryptoWalletFactor $crypto_wallet_factor,
        ?AmazonOAuthFactor $amazon_oauth_factor,
        ?BitbucketOAuthFactor $bitbucket_oauth_factor,
        ?CoinbaseOAuthFactor $coinbase_oauth_factor,
        ?DiscordOAuthFactor $discord_oauth_factor,
        ?FigmaOAuthFactor $figma_oauth_factor,
        ?GitLabOAuthFactor $git_lab_oauth_factor,
        ?InstagramOAuthFactor $instagram_oauth_factor,
        ?LinkedInOAuthFactor $linked_in_oauth_factor,
        ?ShopifyOAuthFactor $shopify_oauth_factor,
        ?SlackOAuthFactor $slack_oauth_factor,
        ?SnapchatOAuthFactor $snapchat_oauth_factor,
        ?SpotifyOAuthFactor $spotify_oauth_factor,
        ?SteamOAuthFactor $steam_oauth_factor,
        ?TikTokOAuthFactor $tik_tok_oauth_factor,
        ?TwitchOAuthFactor $twitch_oauth_factor,
        ?TwitterOAuthFactor $twitter_oauth_factor,
        ?EmbeddableMagicLinkFactor $embeddable_magic_link_factor,
        ?BiometricFactor $biometric_factor,
        ?SAMLSSOFactor $saml_sso_factor,
        ?OIDCSSOFactor $oidc_sso_factor,
        ?SalesforceOAuthFactor $salesforce_oauth_factor,
        ?YahooOAuthFactor $yahoo_oauth_factor,
        ?HubspotOAuthFactor $hubspot_oauth_factor,
        ?SlackOAuthExchangeFactor $slack_oauth_exchange_factor,
        ?HubspotOAuthExchangeFactor $hubspot_oauth_exchange_factor,
        ?GithubOAuthExchangeFactor $github_oauth_exchange_factor,
        ?GoogleOAuthExchangeFactor $google_oauth_exchange_factor,
        ?ImpersonatedFactor $impersonated_factor,
        ?OAuthAccessTokenExchangeFactor $oauth_access_token_exchange_factor,
        ?TrustedAuthTokenFactor $trusted_auth_token_factor
    ) {
        $this->type = $type;
        $this->delivery_method = $delivery_method;
        $this->last_authenticated_at = $last_authenticated_at;
        $this->created_at = $created_at;
        $this->updated_at = $updated_at;
        $this->email_factor = $email_factor;
        $this->phone_number_factor = $phone_number_factor;
        $this->google_oauth_factor = $google_oauth_factor;
        $this->microsoft_oauth_factor = $microsoft_oauth_factor;
        $this->apple_oauth_factor = $apple_oauth_factor;
        $this->webauthn_factor = $webauthn_factor;
        $this->authenticator_app_factor = $authenticator_app_factor;
        $this->github_oauth_factor = $github_oauth_factor;
        $this->recovery_code_factor = $recovery_code_factor;
        $this->facebook_oauth_factor = $facebook_oauth_factor;
        $this->crypto_wallet_factor = $crypto_wallet_factor;
        $this->amazon_oauth_factor = $amazon_oauth_factor;
        $this->bitbucket_oauth_factor = $bitbucket_oauth_factor;
        $this->coinbase_oauth_factor = $coinbase_oauth_factor;
        $this->discord_oauth_factor = $discord_oauth_factor;
        $this->figma_oauth_factor = $figma_oauth_factor;
        $this->git_lab_oauth_factor = $git_lab_oauth_factor;
        $this->instagram_oauth_factor = $instagram_oauth_factor;
        $this->linked_in_oauth_factor = $linked_in_oauth_factor;
        $this->shopify_oauth_factor = $shopify_oauth_factor;
        $this->slack_oauth_factor = $slack_oauth_factor;
        $this->snapchat_oauth_factor = $snapchat_oauth_factor;
        $this->spotify_oauth_factor = $spotify_oauth_factor;
        $this->steam_oauth_factor = $steam_oauth_factor;
        $this->tik_tok_oauth_factor = $tik_tok_oauth_factor;
        $this->twitch_oauth_factor = $twitch_oauth_factor;
        $this->twitter_oauth_factor = $twitter_oauth_factor;
        $this->embeddable_magic_link_factor = $embeddable_magic_link_factor;
        $this->biometric_factor = $biometric_factor;
        $this->saml_sso_factor = $saml_sso_factor;
        $this->oidc_sso_factor = $oidc_sso_factor;
        $this->salesforce_oauth_factor = $salesforce_oauth_factor;
        $this->yahoo_oauth_factor = $yahoo_oauth_factor;
        $this->hubspot_oauth_factor = $hubspot_oauth_factor;
        $this->slack_oauth_exchange_factor = $slack_oauth_exchange_factor;
        $this->hubspot_oauth_exchange_factor = $hubspot_oauth_exchange_factor;
        $this->github_oauth_exchange_factor = $github_oauth_exchange_factor;
        $this->google_oauth_exchange_factor = $google_oauth_exchange_factor;
        $this->impersonated_factor = $impersonated_factor;
        $this->oauth_access_token_exchange_factor = $oauth_access_token_exchange_factor;
        $this->trusted_auth_token_factor = $trusted_auth_token_factor;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['type'],
            $data['delivery_method'],
            $data['last_authenticated_at'] ?? null,
            $data['created_at'] ?? null,
            $data['updated_at'] ?? null,
            $data['email_factor'] ?? null,
            $data['phone_number_factor'] ?? null,
            $data['google_oauth_factor'] ?? null,
            $data['microsoft_oauth_factor'] ?? null,
            $data['apple_oauth_factor'] ?? null,
            $data['webauthn_factor'] ?? null,
            $data['authenticator_app_factor'] ?? null,
            $data['github_oauth_factor'] ?? null,
            $data['recovery_code_factor'] ?? null,
            $data['facebook_oauth_factor'] ?? null,
            $data['crypto_wallet_factor'] ?? null,
            $data['amazon_oauth_factor'] ?? null,
            $data['bitbucket_oauth_factor'] ?? null,
            $data['coinbase_oauth_factor'] ?? null,
            $data['discord_oauth_factor'] ?? null,
            $data['figma_oauth_factor'] ?? null,
            $data['git_lab_oauth_factor'] ?? null,
            $data['instagram_oauth_factor'] ?? null,
            $data['linked_in_oauth_factor'] ?? null,
            $data['shopify_oauth_factor'] ?? null,
            $data['slack_oauth_factor'] ?? null,
            $data['snapchat_oauth_factor'] ?? null,
            $data['spotify_oauth_factor'] ?? null,
            $data['steam_oauth_factor'] ?? null,
            $data['tik_tok_oauth_factor'] ?? null,
            $data['twitch_oauth_factor'] ?? null,
            $data['twitter_oauth_factor'] ?? null,
            $data['embeddable_magic_link_factor'] ?? null,
            $data['biometric_factor'] ?? null,
            $data['saml_sso_factor'] ?? null,
            $data['oidc_sso_factor'] ?? null,
            $data['salesforce_oauth_factor'] ?? null,
            $data['yahoo_oauth_factor'] ?? null,
            $data['hubspot_oauth_factor'] ?? null,
            $data['slack_oauth_exchange_factor'] ?? null,
            $data['hubspot_oauth_exchange_factor'] ?? null,
            $data['github_oauth_exchange_factor'] ?? null,
            $data['google_oauth_exchange_factor'] ?? null,
            $data['impersonated_factor'] ?? null,
            $data['oauth_access_token_exchange_factor'] ?? null,
            $data['trusted_auth_token_factor'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'type' => $this->type,
            'delivery_method' => $this->delivery_method,
            'last_authenticated_at' => $this->last_authenticated_at,
            'created_at' => $this->created_at,
            'updated_at' => $this->updated_at,
            'email_factor' => $this->email_factor,
            'phone_number_factor' => $this->phone_number_factor,
            'google_oauth_factor' => $this->google_oauth_factor,
            'microsoft_oauth_factor' => $this->microsoft_oauth_factor,
            'apple_oauth_factor' => $this->apple_oauth_factor,
            'webauthn_factor' => $this->webauthn_factor,
            'authenticator_app_factor' => $this->authenticator_app_factor,
            'github_oauth_factor' => $this->github_oauth_factor,
            'recovery_code_factor' => $this->recovery_code_factor,
            'facebook_oauth_factor' => $this->facebook_oauth_factor,
            'crypto_wallet_factor' => $this->crypto_wallet_factor,
            'amazon_oauth_factor' => $this->amazon_oauth_factor,
            'bitbucket_oauth_factor' => $this->bitbucket_oauth_factor,
            'coinbase_oauth_factor' => $this->coinbase_oauth_factor,
            'discord_oauth_factor' => $this->discord_oauth_factor,
            'figma_oauth_factor' => $this->figma_oauth_factor,
            'git_lab_oauth_factor' => $this->git_lab_oauth_factor,
            'instagram_oauth_factor' => $this->instagram_oauth_factor,
            'linked_in_oauth_factor' => $this->linked_in_oauth_factor,
            'shopify_oauth_factor' => $this->shopify_oauth_factor,
            'slack_oauth_factor' => $this->slack_oauth_factor,
            'snapchat_oauth_factor' => $this->snapchat_oauth_factor,
            'spotify_oauth_factor' => $this->spotify_oauth_factor,
            'steam_oauth_factor' => $this->steam_oauth_factor,
            'tik_tok_oauth_factor' => $this->tik_tok_oauth_factor,
            'twitch_oauth_factor' => $this->twitch_oauth_factor,
            'twitter_oauth_factor' => $this->twitter_oauth_factor,
            'embeddable_magic_link_factor' => $this->embeddable_magic_link_factor,
            'biometric_factor' => $this->biometric_factor,
            'saml_sso_factor' => $this->saml_sso_factor,
            'oidc_sso_factor' => $this->oidc_sso_factor,
            'salesforce_oauth_factor' => $this->salesforce_oauth_factor,
            'yahoo_oauth_factor' => $this->yahoo_oauth_factor,
            'hubspot_oauth_factor' => $this->hubspot_oauth_factor,
            'slack_oauth_exchange_factor' => $this->slack_oauth_exchange_factor,
            'hubspot_oauth_exchange_factor' => $this->hubspot_oauth_exchange_factor,
            'github_oauth_exchange_factor' => $this->github_oauth_exchange_factor,
            'google_oauth_exchange_factor' => $this->google_oauth_exchange_factor,
            'impersonated_factor' => $this->impersonated_factor,
            'oauth_access_token_exchange_factor' => $this->oauth_access_token_exchange_factor,
            'trusted_auth_token_factor' => $this->trusted_auth_token_factor,
        ];
    }
}

class AttestResponse
{
    public string $user_id;
    public ?Session $session;
    public string $session_token;
    public string $session_jwt;
    public User $user;
    public ?DeviceInfo $user_device;

    public function __construct(
        string $user_id,
        ?Session $session,
        string $session_token,
        string $session_jwt,
        User $user,
        ?DeviceInfo $user_device
    ) {
        $this->user_id = $user_id;
        $this->session = $session;
        $this->session_token = $session_token;
        $this->session_jwt = $session_jwt;
        $this->user = $user;
        $this->user_device = $user_device;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_id'],
            $data['session'] ?? null,
            $data['session_token'],
            $data['session_jwt'],
            $data['user'],
            $data['user_device'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_id' => $this->user_id,
            'session' => $this->session,
            'session_token' => $this->session_token,
            'session_jwt' => $this->session_jwt,
            'user' => $this->user,
            'user_device' => $this->user_device,
        ];
    }
}

class SnapchatOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class SteamOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class EmailFactor
{
    public string $email_id;
    public string $email_address;

    public function __construct(
        string $email_id,
        string $email_address
    ) {
        $this->email_id = $email_id;
        $this->email_address = $email_address;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['email_id'],
            $data['email_address']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'email_id' => $this->email_id,
            'email_address' => $this->email_address,
        ];
    }
}

class CoinbaseOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class FigmaOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class SalesforceOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class SlackOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class SpotifyOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class CryptoWalletFactor
{
    public string $crypto_wallet_id;
    public string $crypto_wallet_address;
    public string $crypto_wallet_type;

    public function __construct(
        string $crypto_wallet_id,
        string $crypto_wallet_address,
        string $crypto_wallet_type
    ) {
        $this->crypto_wallet_id = $crypto_wallet_id;
        $this->crypto_wallet_address = $crypto_wallet_address;
        $this->crypto_wallet_type = $crypto_wallet_type;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['crypto_wallet_id'],
            $data['crypto_wallet_address'],
            $data['crypto_wallet_type']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'crypto_wallet_id' => $this->crypto_wallet_id,
            'crypto_wallet_address' => $this->crypto_wallet_address,
            'crypto_wallet_type' => $this->crypto_wallet_type,
        ];
    }
}

class DiscordOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class InstagramOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class Session
{
    public string $session_id;
    public string $user_id;
    public ?string $started_at;
    public ?string $last_accessed_at;
    public ?string $expires_at;
    public ?Attributes $attributes;
    public ?array $authentication_factors;
    public ?array $custom_claims;

    public function __construct(
        string $session_id,
        string $user_id,
        ?string $started_at,
        ?string $last_accessed_at,
        ?string $expires_at,
        ?Attributes $attributes,
        ?array $authentication_factors,
        ?array $custom_claims
    ) {
        $this->session_id = $session_id;
        $this->user_id = $user_id;
        $this->started_at = $started_at;
        $this->last_accessed_at = $last_accessed_at;
        $this->expires_at = $expires_at;
        $this->attributes = $attributes;
        $this->authentication_factors = $authentication_factors;
        $this->custom_claims = $custom_claims;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['session_id'],
            $data['user_id'],
            $data['started_at'] ?? null,
            $data['last_accessed_at'] ?? null,
            $data['expires_at'] ?? null,
            $data['attributes'] ?? null,
            $data['authentication_factors'] ?? null,
            $data['custom_claims'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'session_id' => $this->session_id,
            'user_id' => $this->user_id,
            'started_at' => $this->started_at,
            'last_accessed_at' => $this->last_accessed_at,
            'expires_at' => $this->expires_at,
            'attributes' => $this->attributes,
            'authentication_factors' => $this->authentication_factors,
            'custom_claims' => $this->custom_claims,
        ];
    }
}

class MicrosoftOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class FacebookOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class YahooOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class OAuthAccessTokenExchangeFactor
{
    public string $client_id;

    public function __construct(
        string $client_id
    ) {
        $this->client_id = $client_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['client_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'client_id' => $this->client_id,
        ];
    }
}

class RecoveryCodeFactor
{
    public string $totp_recovery_code_id;

    public function __construct(
        string $totp_recovery_code_id
    ) {
        $this->totp_recovery_code_id = $totp_recovery_code_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['totp_recovery_code_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'totp_recovery_code_id' => $this->totp_recovery_code_id,
        ];
    }
}

class GoogleOAuthExchangeFactor
{
    public string $email_id;

    public function __construct(
        string $email_id
    ) {
        $this->email_id = $email_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['email_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'email_id' => $this->email_id,
        ];
    }
}

class AuthorizationCheck
{
    public string $resource_id;
    public string $action;

    public function __construct(
        string $resource_id,
        string $action
    ) {
        $this->resource_id = $resource_id;
        $this->action = $action;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['resource_id'],
            $data['action']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'resource_id' => $this->resource_id,
            'action' => $this->action,
        ];
    }
}

class BitbucketOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class TwitterOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class EmbeddableMagicLinkFactor
{
    public string $embedded_id;

    public function __construct(
        string $embedded_id
    ) {
        $this->embedded_id = $embedded_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['embedded_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'embedded_id' => $this->embedded_id,
        ];
    }
}

class GithubOAuthExchangeFactor
{
    public string $email_id;

    public function __construct(
        string $email_id
    ) {
        $this->email_id = $email_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['email_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'email_id' => $this->email_id,
        ];
    }
}

class TrustedAuthTokenFactor
{
    public string $token_id;

    public function __construct(
        string $token_id
    ) {
        $this->token_id = $token_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['token_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'token_id' => $this->token_id,
        ];
    }
}

class JWK
{
    public string $kty;
    public string $use;
    public array $key_ops;
    public string $alg;
    public string $kid;
    public array $x5c;
    public string $x5tS256;
    public string $n;
    public string $e;

    public function __construct(
        string $kty,
        string $use,
        array $key_ops,
        string $alg,
        string $kid,
        array $x5c,
        string $x5tS256,
        string $n,
        string $e
    ) {
        $this->kty = $kty;
        $this->use = $use;
        $this->key_ops = $key_ops;
        $this->alg = $alg;
        $this->kid = $kid;
        $this->x5c = $x5c;
        $this->x5tS256 = $x5tS256;
        $this->n = $n;
        $this->e = $e;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['kty'],
            $data['use'],
            $data['key_ops'],
            $data['alg'],
            $data['kid'],
            $data['x5c'],
            $data['x5tS256'],
            $data['n'],
            $data['e']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'kty' => $this->kty,
            'use' => $this->use,
            'key_ops' => $this->key_ops,
            'alg' => $this->alg,
            'kid' => $this->kid,
            'x5c' => $this->x5c,
            'x5tS256' => $this->x5tS256,
            'n' => $this->n,
            'e' => $this->e,
        ];
    }
}

class WebAuthnFactor
{
    public string $webauthn_registration_id;
    public string $domain;
    public ?string $user_agent;

    public function __construct(
        string $webauthn_registration_id,
        string $domain,
        ?string $user_agent
    ) {
        $this->webauthn_registration_id = $webauthn_registration_id;
        $this->domain = $domain;
        $this->user_agent = $user_agent;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['webauthn_registration_id'],
            $data['domain'],
            $data['user_agent'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'webauthn_registration_id' => $this->webauthn_registration_id,
            'domain' => $this->domain,
            'user_agent' => $this->user_agent,
        ];
    }
}

class SAMLSSOFactor
{
    public string $id;
    public string $provider_id;
    public string $external_id;

    public function __construct(
        string $id,
        string $provider_id,
        string $external_id
    ) {
        $this->id = $id;
        $this->provider_id = $provider_id;
        $this->external_id = $external_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['provider_id'],
            $data['external_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'provider_id' => $this->provider_id,
            'external_id' => $this->external_id,
        ];
    }
}

class AccessTokenExchangeResponse
{
    public string $user_id;
    public ?Session $session;
    public string $session_token;
    public string $session_jwt;
    public User $user;
    public ?DeviceInfo $user_device;

    public function __construct(
        string $user_id,
        ?Session $session,
        string $session_token,
        string $session_jwt,
        User $user,
        ?DeviceInfo $user_device
    ) {
        $this->user_id = $user_id;
        $this->session = $session;
        $this->session_token = $session_token;
        $this->session_jwt = $session_jwt;
        $this->user = $user;
        $this->user_device = $user_device;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_id'],
            $data['session'] ?? null,
            $data['session_token'],
            $data['session_jwt'],
            $data['user'],
            $data['user_device'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_id' => $this->user_id,
            'session' => $this->session,
            'session_token' => $this->session_token,
            'session_jwt' => $this->session_jwt,
            'user' => $this->user,
            'user_device' => $this->user_device,
        ];
    }
}

class TikTokOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class BiometricFactor
{
    public string $biometric_registration_id;

    public function __construct(
        string $biometric_registration_id
    ) {
        $this->biometric_registration_id = $biometric_registration_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['biometric_registration_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'biometric_registration_id' => $this->biometric_registration_id,
        ];
    }
}

class SessionsRevokeResponse
{

    public function __construct(
    ) {
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
        ];
    }
}

class AppleOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class OIDCSSOFactor
{
    public string $id;
    public string $provider_id;
    public string $external_id;

    public function __construct(
        string $id,
        string $provider_id,
        string $external_id
    ) {
        $this->id = $id;
        $this->provider_id = $provider_id;
        $this->external_id = $external_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['provider_id'],
            $data['external_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'provider_id' => $this->provider_id,
            'external_id' => $this->external_id,
        ];
    }
}

class GoogleOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class MigrateFromExternalResponse
{
    public string $user_id;
    public ?Session $session;
    public string $session_token;
    public string $session_jwt;
    public User $user;
    public ?DeviceInfo $user_device;

    public function __construct(
        string $user_id,
        ?Session $session,
        string $session_token,
        string $session_jwt,
        User $user,
        ?DeviceInfo $user_device
    ) {
        $this->user_id = $user_id;
        $this->session = $session;
        $this->session_token = $session_token;
        $this->session_jwt = $session_jwt;
        $this->user = $user;
        $this->user_device = $user_device;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['user_id'],
            $data['session'] ?? null,
            $data['session_token'],
            $data['session_jwt'],
            $data['user'],
            $data['user_device'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'user_id' => $this->user_id,
            'session' => $this->session,
            'session_token' => $this->session_token,
            'session_jwt' => $this->session_jwt,
            'user' => $this->user,
            'user_device' => $this->user_device,
        ];
    }
}

class ImpersonatedFactor
{
    public string $impersonator_id;
    public string $impersonator_email_address;

    public function __construct(
        string $impersonator_id,
        string $impersonator_email_address
    ) {
        $this->impersonator_id = $impersonator_id;
        $this->impersonator_email_address = $impersonator_email_address;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['impersonator_id'],
            $data['impersonator_email_address']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'impersonator_id' => $this->impersonator_id,
            'impersonator_email_address' => $this->impersonator_email_address,
        ];
    }
}

class LinkedInOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class SlackOAuthExchangeFactor
{
    public string $email_id;

    public function __construct(
        string $email_id
    ) {
        $this->email_id = $email_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['email_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'email_id' => $this->email_id,
        ];
    }
}

class GithubOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

class HubspotOAuthExchangeFactor
{
    public string $email_id;

    public function __construct(
        string $email_id
    ) {
        $this->email_id = $email_id;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['email_id']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'email_id' => $this->email_id,
        ];
    }
}

class SessionsJWKSResponse
{
    public ?array $keys;

    public function __construct(
        ?array $keys
    ) {
        $this->keys = $keys;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['keys'] ?? null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'keys' => $this->keys,
        ];
    }
}

class PhoneNumberFactor
{
    public string $phone_id;
    public string $phone_number;

    public function __construct(
        string $phone_id,
        string $phone_number
    ) {
        $this->phone_id = $phone_id;
        $this->phone_number = $phone_number;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['phone_id'],
            $data['phone_number']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'phone_id' => $this->phone_id,
            'phone_number' => $this->phone_number,
        ];
    }
}

class TwitchOAuthFactor
{
    public string $id;
    public ?string $email_id;
    public string $provider_subject;

    public function __construct(
        string $id,
        ?string $email_id,
        string $provider_subject
    ) {
        $this->id = $id;
        $this->email_id = $email_id;
        $this->provider_subject = $provider_subject;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['id'],
            $data['email_id'] ?? null,
            $data['provider_subject']
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'id' => $this->id,
            'email_id' => $this->email_id,
            'provider_subject' => $this->provider_subject,
        ];
    }
}

