<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Models;

final class DeviceInfo
{
    /**
    * The `visitor_id` (a unique identifier) of the user's device. See the
    * [Device Fingerprinting documentation](https://stytch.com/docs/fraud/guides/device-fingerprinting/fingerprints) for more details on the `visitor_id`.
     */
    public string $visitorId;
    /** Information about the `visitor_id`. */
    public ?DeviceAttributeDetails $visitorIdDetails = null;
    /** The IP address of the user's device. */
    public ?string $ipAddress = null;
    /** Information about the `ip_address`. */
    public ?DeviceAttributeDetails $ipAddressDetails = null;
    /** The city where the IP address is located. */
    public ?string $ipGeoCity = null;
    /** The region where the IP address is located. */
    public ?string $ipGeoRegion = null;
    /** The country code where the IP address is located. */
    public ?string $ipGeoCountry = null;
    /** Information about the `ip_geo_country`. */
    public ?DeviceAttributeDetails $ipGeoCountryDetails = null;

    public function __construct(
        string $visitorId,
        ?DeviceAttributeDetails $visitorIdDetails = null,
        ?string $ipAddress = null,
        ?DeviceAttributeDetails $ipAddressDetails = null,
        ?string $ipGeoCity = null,
        ?string $ipGeoRegion = null,
        ?string $ipGeoCountry = null,
        ?DeviceAttributeDetails $ipGeoCountryDetails = null
    ) {
        $this->visitorId = $visitorId;
        $this->visitorIdDetails = $visitorIdDetails;
        $this->ipAddress = $ipAddress;
        $this->ipAddressDetails = $ipAddressDetails;
        $this->ipGeoCity = $ipGeoCity;
        $this->ipGeoRegion = $ipGeoRegion;
        $this->ipGeoCountry = $ipGeoCountry;
        $this->ipGeoCountryDetails = $ipGeoCountryDetails;
    }

    /**
     * Create an instance from an array
     *
     * @param array $data
     * @return static
     */
    public static function fromArray(array $data): static
    {
        return new static(
            $data['visitor_id'],
            $data['visitor_id_details'] !== null ? DeviceAttributeDetails::fromArray($data['visitor_id_details']) : null,
            $data['ip_address'] ?? null,
            $data['ip_address_details'] !== null ? DeviceAttributeDetails::fromArray($data['ip_address_details']) : null,
            $data['ip_geo_city'] ?? null,
            $data['ip_geo_region'] ?? null,
            $data['ip_geo_country'] ?? null,
            $data['ip_geo_country_details'] !== null ? DeviceAttributeDetails::fromArray($data['ip_geo_country_details']) : null
        );
    }

    /**
     * Convert to array
     *
     * @return array
     */
    public function toArray(): array
    {
        return [
            'visitor_id' => $this->visitorId,
            'visitor_id_details' => $this->visitorIdDetails,
            'ip_address' => $this->ipAddress,
            'ip_address_details' => $this->ipAddressDetails,
            'ip_geo_city' => $this->ipGeoCity,
            'ip_geo_region' => $this->ipGeoRegion,
            'ip_geo_country' => $this->ipGeoCountry,
            'ip_geo_country_details' => $this->ipGeoCountryDetails,
        ];
    }
}
