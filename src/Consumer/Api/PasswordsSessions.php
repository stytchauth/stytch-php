<?php

// !!!
// WARNING: This file is autogenerated
// Only modify code within MANUAL() sections
// or your changes may be overwritten later!
// !!!

namespace Stytch\Consumer\Api;

use Stytch\Core\Client;

class PasswordsSessions
{
    private Client $client;


    public function __construct(Client $client)
    {
        $this->client = $client;

    }

    /**
        * Reset the userâ€™s password using their existing session. The endpoint will error if the session does not
        * have a password, email magic link, or email OTP authentication factor that has been issued within the
        * last 5 minutes. This endpoint requires either a `session_jwt` or `session_token` be included in the
        * request.
        *
        * Note that a successful password reset via an existing session will revoke all active sessions for the
        * `user_id`, except for the one used during the reset flow.

         * @param \Stytch\Consumer\Models\Passwords\Sessions\ResetRequest|array $request
         * @return \Stytch\Consumer\Models\Passwords\Sessions\ResetResponse
         */
    public function reset(
        \Stytch\Consumer\Models\Passwords\Sessions\ResetRequest|array $request,
    ): \Stytch\Consumer\Models\Passwords\Sessions\ResetResponse {
        $data = is_array($request) ? $request : $request->toArray();
        $response = $this->client->post('/v1/passwords/session/reset', $data);
        return \Stytch\Consumer\Models\Passwords\Sessions\ResetResponse::fromArray($response);
    }

}
